{"cells":[{"cell_type":"markdown","metadata":{"id":"0Sz1WwP4FobM"},"source":["# Determination of Affinity of Interaction between Protein and Ligand"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"8Wobmr5OSVRh","cellView":"code","colab":{"base_uri":"https://localhost:8080/","height":454},"executionInfo":{"status":"error","timestamp":1731583276024,"user_tz":-60,"elapsed":5322,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"9e61dd04-fc12-489e-961a-c2081de1c20c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'main'...\n","fatal: repository 'https://github.com/unizar-flav/DAIProLi/tree/main.git/' not found\n"]},{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'DAIProLi'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-139f4d1ae9d3>\u001b[0m in \u001b[0;36m<cell line: 26>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;31m# This is not definitive, the final solution will be to upload the module into the Unizar's GitHub\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msystem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'git clone https://github.com/unizar-flav/DAIProLi/tree/main.git'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 26\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mDAIProLi\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfuncionesGenerales\u001b[0m \u001b[0;32mimport\u001b[0m  \u001b[0mprocesa\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margLeastSquares\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     27\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;31m##Specific functions\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'DAIProLi'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["#@title Modules and functions\n","#@markdown You need to run this cell only once regardless of the number of datasets to be evaluated.\n","\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","import pandas as pd\n","import csv\n","import zipfile # Necesary to compress the files into zip\n","\n","from bokeh.io import output_notebook, show, export_png\n","from bokeh.plotting import figure, output_file, save\n","from bokeh.models import Legend\n","from bokeh.palettes import linear_palette, Viridis256\n","from bokeh.palettes import Category20\n","\n","from mpl_toolkits.mplot3d import Axes3D\n","\n","from google.colab import files\n","from datetime import datetime\n","import os\n","\n","# This is not definitive, the final solution will be to upload the module into the Unizar's GitHub\n","!git clone https://github.com/unizar-flav/DAIProLi.git\n","from DAIProLi.funcionesGenerales import  procesa, argLeastSquares\n","\n","##Specific functions\n","\n","\n","def leeFichero(nombrFich, colValLabel='Wavelength', intercaladas=True, separador=',', column_inter=\"Name\"):\n","    nLineas = 0\n","    colValues = []  # This will store the original column names\n","    colnames_inter = [] # This will store the original column names in the case for intercaladas\n","    matriz = None\n","\n","    # Open and read the file\n","    with open(nombrFich, 'r') as fichero:\n","        for linea in fichero:\n","            row = np.array(())\n","\n","            # If we detect the column_inter label, capture the original column names\n","            if linea.split(separador)[0].strip() == column_inter:\n","                colnames_inter = [dato.strip() for dato in linea.split(separador) if dato.strip()]\n","                #print(f\"Captured intercalated column names: {colnames_inter}\")  # Debugging line\n","\n","            # If we detect the column value label, capture the original column names\n","            if colValLabel in linea:\n","                colValues = [dato.strip() for dato in linea.split(separador) if dato.strip()]\n","                #print(f\"Captured column values: {colValues}\")  # Debugging line\n","\n","                # If intercaladas is True, intercalate the column names as well\n","                if intercaladas == True:\n","                    colValues = colnames_inter\n","                colValues[0] = \"Wavelength (nm)\"\n","                continue\n","\n","            try:\n","                # Process data lines\n","                for dato in linea.split(separador):\n","                    if dato.strip():\n","                        row = np.append(row, float(dato))\n","\n","                # Ensure the row contains data before processing\n","                if len(row) > 0:\n","                    if intercaladas:\n","                        # Only intercalate if the row has at least 2 elements\n","                        if len(row) > 1:\n","                            row = np.append(row[0], row[1::2])\n","                        else:\n","                            row = row  # Leave row as is if it only has 1 element\n","\n","                    # Initialize the matrix on the first valid data row\n","                    if nLineas == 0:\n","                        matriz = np.empty((0, len(row)))\n","\n","                    # Stack the rows into the matrix\n","                    matriz = np.vstack((matriz, row))\n","                    nLineas += 1\n","\n","            except ValueError:\n","                pass  # Skip rows that cannot be processed\n","\n","    # Convert the matrix to a DataFrame\n","    if matriz is not None:\n","        df = pd.DataFrame(matriz)\n","\n","        if intercaladas == True and \"Baseline\" in colValues: # In this line of code we delete the Baseline column only when intercaladas is true\n","            col_index = colValues.index(\"Baseline\")\n","            df.drop(columns=[col_index], inplace=True)\n","            colValues.pop(col_index)\n","\n","        # Apply the intercalated column names\n","        if len(colValues) == df.shape[1]:\n","            df.columns = colValues\n","        else:\n","            print(f\"Warning: Mismatch between column names ({len(colValues)}) and data columns ({df.shape[1]}).\")\n","            df.columns = colValues[:df.shape[1]]  # Use available names if mismatch\n","\n","\n","        return df\n","    else:\n","        print(\"No data was read from the file.\")\n","        return None\n","\n","\n","\n","\n","\n","def diff_absorbance(df, method=\"Manual\", check_vals=False, min_chosen=0, max_chosen=0):\n","\n","  # Extract the values of the first column (Wavelength (nm))\n","  wavelength= df.iloc[:,0]\n","\n","  # Extract the absorbance measurements (all the columns except for the first one)\n","  absorbance= df.iloc[:,1:]\n","\n","  # Extract the columns' names from the third there on (third included)\n","  volume= df.columns[2:]\n","  volume = pd.to_numeric(volume)\n","\n","  # Initialize the lists to record the minimums, maximums and their respective wavelengths\n","  min_vals = []\n","  max_vals = []\n","  min_wave = []\n","  max_wave = []\n","\n","  # Iterate over each column (except the first and second, wavelength and baseline respectively)\n","  for col in df.columns[2:]:\n","    # Find the minimum, maximum value and their respective wavelengths\n","      min_val = df[col].min()\n","      max_val = df[col].max()\n","\n","      min_wl = df[df[col] == min_val]['Wavelength (nm)'].iloc[0]\n","      max_wl = df[df[col] == max_val]['Wavelength (nm)'].iloc[0]\n","      #print(min_wl)\n","      # Record in the information on their respective lists\n","      min_vals.append(min_val)\n","      max_vals.append(max_val)\n","      min_wave.append(min_wl)\n","      max_wave.append(max_wl)\n","\n","  if check_vals == True:\n","    # Now we create some dataframes to view the inner workings of the function\n","    inter_min_dict = {\"min_wave (nm)\":min_wave, \"min_abs\":min_vals}\n","    inter_min_df =pd.DataFrame(inter_min_dict, index=volume)\n","    inter_max_dict = {\"max_wave (nm)\":max_wave, \"max_abs\":max_vals}\n","    inter_max_df =pd.DataFrame(inter_max_dict, index=volume)\n","\n","\n","    print(f'Results from minima search: \\n{inter_min_df}')\n","    print(f'Results from maxima search: \\n{inter_max_df}')\n","\n","\n","\n","  if method == \"Mean\":\n","    # Calculate the mean of the wavelengths belonging to the minimums and maximums\n","    avg_min_wave = np.mean(min_wave)\n","    avg_max_wave = np.mean(max_wave)\n","    # Instead of rounding, find the closest wavelength in the dataset for both avg_min_wave and avg_max_wave\n","    closest_min_wave = wavelength.iloc[(np.abs(wavelength - avg_min_wave)).idxmin()]\n","    closest_max_wave = wavelength.iloc[(np.abs(wavelength - avg_max_wave)).idxmin()]\n","  elif method == \"Median\":\n","    closest_min_wave = np.median(min_wave)\n","    closest_max_wave = np.median(max_wave)\n","  elif method == \"Manual\":\n","    closest_min_wave = wavelength.iloc[(np.abs(wavelength - min_chosen)).idxmin()] # This ensures that a true wavelength is chosen\n","    closest_max_wave = wavelength.iloc[(np.abs(wavelength - max_chosen)).idxmin()]\n","  else:\n","    print(\"Error\")\n","\n","\n","\n","\n","\n","\n","  # Find the Dataframe's row that corresponds to the \"closest\" maximum and minimum wavelengths\n","  min_abs = df[df['Wavelength (nm)'] == closest_min_wave].iloc[:,2:].reset_index(drop=True).T\n","  max_abs = df[df['Wavelength (nm)'] == closest_max_wave].iloc[:,2:].reset_index(drop=True).T\n","\n","  # Calculate deltaAbs as the difference between absorbance at the \"closest\" maximum and minimum wavelengths\n","  deltaAbs = max_abs - min_abs\n","\n","  # Create a DataFrame with the results to be the output\n","  out_df = deltaAbs\n","  out_df.insert(0, column ='',value=volume)\n","  out_df.reset_index(drop=True, inplace=True)\n","  out_df.columns= ['Volume µl', 'ΔAbs']\n","  # Add two columns to write the \"closest\" maximum and minimum wavelengths\n","  out_df[\"min_wave (nm)\"] = closest_min_wave\n","  out_df[\"max_wave (nm)\"] = closest_max_wave\n","\n","\n","  # Print the values calculated\n","  print(f'Minimum:  ({closest_min_wave} nm)\\t Maximum:  ({closest_max_wave} nm)')\n","\n","\n","  return out_df\n","\n","\n","# Define the function to shift spectra so that they become zero at a specific wavelength\n","\n","\"\"\"\n","## English\n","Adjusts all spectra so that their absorbance is zero at a given target wavelength.\n","\n","Parameters:\n","wavelengths (dataframe): A dataframe of one column with the wavelength values.\n","absorbance (dataframe): A dataframe where each column is a spectrum at different volumes.\n","target_wavelength (float): The wavelength at which all spectra should be adjusted to zero.\n","\n","\n","shifted_absorbance: The absorbance values adjusted to zero at the target wavelength.\n","\n","Returns:\n","shifted_data: A dataframe result of merging wavelengths and shifted_absorbance dataframes\n","\n","## Español\n","Ajusta todos los espectro de manera que su absorbancua es cero a una determinada longitud\n","de onda.\n","\n","Parámetros:\n","wavelengths (dataframe): Un dataframe de una columna con los valores de las longitudes de onda\n","absorbance (dataframe): Un dataframe en el que cada columna es un espectro a diferentes volúmenes.\n","target_wavelength (float): La longitudes de onda a la que todos los espectros se deben ajustar a cero.\n","\n","\n","shifted_absorbance: Los valores de absorbancia ajustados a cero a la longitud de onda elegida.\n","\n","Resultado:\n","shifted_data: Un dataframe que se crea a partir de la unión de los dataframes 'wavelengths' y\n","shifted_absorbance.\n","\n","\"\"\"\n","def shift_spectra_to_zero(data, target_wavelength):\n","    wavelengths=datos.iloc[:,0]\n","    absorbance=datos.iloc[:,1:]\n","\n","    # Find the index of the target wavelength in the wavelengths dataframe\n","    target_idx = (np.abs(wavelengths - target_wavelength)).argmin()\n","\n","    # Extract the absorbance at the target wavelength for each spectrum\n","    absorbance_at_target = absorbance.iloc[target_idx, :]\n","\n","    # Shift each spectrum by subtracting its absorbance at the target wavelength\n","    shifted_absorbance = absorbance - absorbance_at_target.values\n","    shifted_data = pd.concat([wavelengths, shifted_absorbance], axis=1)\n","\n","    return shifted_data\n","\n","\n","\n","########\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SvHhuBtVMDT8","colab":{"base_uri":"https://localhost:8080/","height":479},"executionInfo":{"status":"ok","timestamp":1731339173780,"user_tz":-60,"elapsed":8589,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"814094dc-90bf-46b2-8368-0e7a77cfbf85"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-cb856e56-b153-4d0b-a3e9-f39043499a01\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-cb856e56-b153-4d0b-a3e9-f39043499a01\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving 20240726 esp dif BoAKr p-Bq nuevo stock_t.csv to 20240726 esp dif BoAKr p-Bq nuevo stock_t.csv\n"]},{"output_type":"execute_result","data":{"text/plain":["     Wavelength (nm)         0       2.6       5.2       7.8      10.4  \\\n","0              700.0  0.000084  0.000132 -0.000278  0.000378 -0.000576   \n","1              699.0  0.000056  0.000049 -0.000249  0.000318 -0.000559   \n","2              698.0  0.000010  0.000120 -0.000334  0.000231 -0.000622   \n","3              697.0  0.000027  0.000064 -0.000202  0.000372 -0.000492   \n","4              696.0  0.000091  0.000095 -0.000268  0.000358 -0.000495   \n","..               ...       ...       ...       ...       ...       ...   \n","416            284.0 -0.000050  0.013783  0.019162  0.021092  0.021985   \n","417            283.0 -0.000059  0.013738  0.019451  0.021337  0.022186   \n","418            282.0 -0.000056  0.013729  0.019582  0.021481  0.022350   \n","419            281.0 -0.000076  0.013556  0.019713  0.021556  0.022341   \n","420            280.0 -0.000074  0.013514  0.019824  0.021635  0.022329   \n","\n","           13      15.6      19.2      22.8  ...      44.4      49.8  \\\n","0    0.000240  0.000197  0.000110  0.000297  ...  0.000959  0.000817   \n","1    0.000197  0.000216  0.000096  0.000360  ...  0.000961  0.000863   \n","2    0.000221  0.000200  0.000072  0.000286  ...  0.000929  0.000852   \n","3    0.000258  0.000179  0.000092  0.000332  ...  0.001091  0.000881   \n","4    0.000205  0.000245  0.000136  0.000364  ...  0.001035  0.000866   \n","..        ...       ...       ...       ...  ...       ...       ...   \n","416  0.022348  0.021582  0.022357  0.024734  ...  0.026790  0.028659   \n","417  0.022484  0.021624  0.022403  0.024678  ...  0.026492  0.028265   \n","418  0.022547  0.021613  0.022318  0.024573  ...  0.026127  0.027891   \n","419  0.022483  0.021531  0.022123  0.024378  ...  0.025655  0.027361   \n","420  0.022367  0.021336  0.021925  0.024084  ...  0.025072  0.026713   \n","\n","         55.2      60.6        70        80        90       100       110  \\\n","0    0.000427  0.001119 -0.001404 -0.001295 -0.001482 -0.001222 -0.001361   \n","1    0.000471  0.001069 -0.001441 -0.001213 -0.001545 -0.001176 -0.001414   \n","2    0.000384  0.001064 -0.001449 -0.001269 -0.001478 -0.001251 -0.001411   \n","3    0.000485  0.001141 -0.001412 -0.001219 -0.001441 -0.001163 -0.001368   \n","4    0.000475  0.001073 -0.001505 -0.001245 -0.001455 -0.001045 -0.001351   \n","..        ...       ...       ...       ...       ...       ...       ...   \n","416  0.029089  0.029598  0.029768  0.032421  0.035535  0.033270  0.037432   \n","417  0.028538  0.029056  0.029207  0.031756  0.034800  0.032514  0.036497   \n","418  0.028159  0.028563  0.028694  0.031137  0.034152  0.031845  0.035825   \n","419  0.027468  0.027917  0.028025  0.030404  0.033481  0.031080  0.034967   \n","420  0.026802  0.027206  0.027246  0.029587  0.032691  0.030184  0.033970   \n","\n","          120  \n","0   -0.001023  \n","1   -0.001008  \n","2   -0.001026  \n","3   -0.000947  \n","4   -0.000968  \n","..        ...  \n","416  0.040484  \n","417  0.039516  \n","418  0.038738  \n","419  0.037744  \n","420  0.036781  \n","\n","[421 rows x 24 columns]"],"text/html":["\n","  <div id=\"df-b1887191-1611-498e-8c5c-823c22879785\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Wavelength (nm)</th>\n","      <th>0</th>\n","      <th>2.6</th>\n","      <th>5.2</th>\n","      <th>7.8</th>\n","      <th>10.4</th>\n","      <th>13</th>\n","      <th>15.6</th>\n","      <th>19.2</th>\n","      <th>22.8</th>\n","      <th>...</th>\n","      <th>44.4</th>\n","      <th>49.8</th>\n","      <th>55.2</th>\n","      <th>60.6</th>\n","      <th>70</th>\n","      <th>80</th>\n","      <th>90</th>\n","      <th>100</th>\n","      <th>110</th>\n","      <th>120</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>700.0</td>\n","      <td>0.000084</td>\n","      <td>0.000132</td>\n","      <td>-0.000278</td>\n","      <td>0.000378</td>\n","      <td>-0.000576</td>\n","      <td>0.000240</td>\n","      <td>0.000197</td>\n","      <td>0.000110</td>\n","      <td>0.000297</td>\n","      <td>...</td>\n","      <td>0.000959</td>\n","      <td>0.000817</td>\n","      <td>0.000427</td>\n","      <td>0.001119</td>\n","      <td>-0.001404</td>\n","      <td>-0.001295</td>\n","      <td>-0.001482</td>\n","      <td>-0.001222</td>\n","      <td>-0.001361</td>\n","      <td>-0.001023</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>699.0</td>\n","      <td>0.000056</td>\n","      <td>0.000049</td>\n","      <td>-0.000249</td>\n","      <td>0.000318</td>\n","      <td>-0.000559</td>\n","      <td>0.000197</td>\n","      <td>0.000216</td>\n","      <td>0.000096</td>\n","      <td>0.000360</td>\n","      <td>...</td>\n","      <td>0.000961</td>\n","      <td>0.000863</td>\n","      <td>0.000471</td>\n","      <td>0.001069</td>\n","      <td>-0.001441</td>\n","      <td>-0.001213</td>\n","      <td>-0.001545</td>\n","      <td>-0.001176</td>\n","      <td>-0.001414</td>\n","      <td>-0.001008</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>698.0</td>\n","      <td>0.000010</td>\n","      <td>0.000120</td>\n","      <td>-0.000334</td>\n","      <td>0.000231</td>\n","      <td>-0.000622</td>\n","      <td>0.000221</td>\n","      <td>0.000200</td>\n","      <td>0.000072</td>\n","      <td>0.000286</td>\n","      <td>...</td>\n","      <td>0.000929</td>\n","      <td>0.000852</td>\n","      <td>0.000384</td>\n","      <td>0.001064</td>\n","      <td>-0.001449</td>\n","      <td>-0.001269</td>\n","      <td>-0.001478</td>\n","      <td>-0.001251</td>\n","      <td>-0.001411</td>\n","      <td>-0.001026</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>697.0</td>\n","      <td>0.000027</td>\n","      <td>0.000064</td>\n","      <td>-0.000202</td>\n","      <td>0.000372</td>\n","      <td>-0.000492</td>\n","      <td>0.000258</td>\n","      <td>0.000179</td>\n","      <td>0.000092</td>\n","      <td>0.000332</td>\n","      <td>...</td>\n","      <td>0.001091</td>\n","      <td>0.000881</td>\n","      <td>0.000485</td>\n","      <td>0.001141</td>\n","      <td>-0.001412</td>\n","      <td>-0.001219</td>\n","      <td>-0.001441</td>\n","      <td>-0.001163</td>\n","      <td>-0.001368</td>\n","      <td>-0.000947</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>696.0</td>\n","      <td>0.000091</td>\n","      <td>0.000095</td>\n","      <td>-0.000268</td>\n","      <td>0.000358</td>\n","      <td>-0.000495</td>\n","      <td>0.000205</td>\n","      <td>0.000245</td>\n","      <td>0.000136</td>\n","      <td>0.000364</td>\n","      <td>...</td>\n","      <td>0.001035</td>\n","      <td>0.000866</td>\n","      <td>0.000475</td>\n","      <td>0.001073</td>\n","      <td>-0.001505</td>\n","      <td>-0.001245</td>\n","      <td>-0.001455</td>\n","      <td>-0.001045</td>\n","      <td>-0.001351</td>\n","      <td>-0.000968</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>284.0</td>\n","      <td>-0.000050</td>\n","      <td>0.013783</td>\n","      <td>0.019162</td>\n","      <td>0.021092</td>\n","      <td>0.021985</td>\n","      <td>0.022348</td>\n","      <td>0.021582</td>\n","      <td>0.022357</td>\n","      <td>0.024734</td>\n","      <td>...</td>\n","      <td>0.026790</td>\n","      <td>0.028659</td>\n","      <td>0.029089</td>\n","      <td>0.029598</td>\n","      <td>0.029768</td>\n","      <td>0.032421</td>\n","      <td>0.035535</td>\n","      <td>0.033270</td>\n","      <td>0.037432</td>\n","      <td>0.040484</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>283.0</td>\n","      <td>-0.000059</td>\n","      <td>0.013738</td>\n","      <td>0.019451</td>\n","      <td>0.021337</td>\n","      <td>0.022186</td>\n","      <td>0.022484</td>\n","      <td>0.021624</td>\n","      <td>0.022403</td>\n","      <td>0.024678</td>\n","      <td>...</td>\n","      <td>0.026492</td>\n","      <td>0.028265</td>\n","      <td>0.028538</td>\n","      <td>0.029056</td>\n","      <td>0.029207</td>\n","      <td>0.031756</td>\n","      <td>0.034800</td>\n","      <td>0.032514</td>\n","      <td>0.036497</td>\n","      <td>0.039516</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>282.0</td>\n","      <td>-0.000056</td>\n","      <td>0.013729</td>\n","      <td>0.019582</td>\n","      <td>0.021481</td>\n","      <td>0.022350</td>\n","      <td>0.022547</td>\n","      <td>0.021613</td>\n","      <td>0.022318</td>\n","      <td>0.024573</td>\n","      <td>...</td>\n","      <td>0.026127</td>\n","      <td>0.027891</td>\n","      <td>0.028159</td>\n","      <td>0.028563</td>\n","      <td>0.028694</td>\n","      <td>0.031137</td>\n","      <td>0.034152</td>\n","      <td>0.031845</td>\n","      <td>0.035825</td>\n","      <td>0.038738</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>281.0</td>\n","      <td>-0.000076</td>\n","      <td>0.013556</td>\n","      <td>0.019713</td>\n","      <td>0.021556</td>\n","      <td>0.022341</td>\n","      <td>0.022483</td>\n","      <td>0.021531</td>\n","      <td>0.022123</td>\n","      <td>0.024378</td>\n","      <td>...</td>\n","      <td>0.025655</td>\n","      <td>0.027361</td>\n","      <td>0.027468</td>\n","      <td>0.027917</td>\n","      <td>0.028025</td>\n","      <td>0.030404</td>\n","      <td>0.033481</td>\n","      <td>0.031080</td>\n","      <td>0.034967</td>\n","      <td>0.037744</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>280.0</td>\n","      <td>-0.000074</td>\n","      <td>0.013514</td>\n","      <td>0.019824</td>\n","      <td>0.021635</td>\n","      <td>0.022329</td>\n","      <td>0.022367</td>\n","      <td>0.021336</td>\n","      <td>0.021925</td>\n","      <td>0.024084</td>\n","      <td>...</td>\n","      <td>0.025072</td>\n","      <td>0.026713</td>\n","      <td>0.026802</td>\n","      <td>0.027206</td>\n","      <td>0.027246</td>\n","      <td>0.029587</td>\n","      <td>0.032691</td>\n","      <td>0.030184</td>\n","      <td>0.033970</td>\n","      <td>0.036781</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>421 rows × 24 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1887191-1611-498e-8c5c-823c22879785')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1887191-1611-498e-8c5c-823c22879785 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1887191-1611-498e-8c5c-823c22879785');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-da5d797e-7e6c-4a25-8ac0-565adfc59e8e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da5d797e-7e6c-4a25-8ac0-565adfc59e8e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-da5d797e-7e6c-4a25-8ac0-565adfc59e8e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8267db07-395d-4ffb-bc5d-70a9c3341f8d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('datos')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8267db07-395d-4ffb-bc5d-70a9c3341f8d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('datos');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"datos"}},"metadata":{},"execution_count":5}],"source":["#@title Upload file\n","\n","#@markdown Select the correspondent choices dependending in your data format,\n","#@markdown  if in doubt do not change the preset values.\n","\n","# Upload the file and save in a dictionary\n","uploaded=files.upload()\n","\n","# Obtain the uploaded file name from the dictionary\n","file_name=list(uploaded.keys())[0]\n","# @markdown **Interspersed Columns**\n","\n","Interspersed = True #@param {type:\"boolean\"}\n","\n","# @markdown **Columns Separator**\n","Separator = \",\" #@param [\",\", \";\"]\n","\n","\n","datos= leeFichero(nombrFich=file_name, intercaladas= Interspersed, separador=Separator)\n","datos"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"is2Bsbi_53kL","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1731339177463,"user_tz":-60,"elapsed":284,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"f664a240-a2d3-450f-e2ff-760c8aadc471"},"outputs":[{"output_type":"stream","name":"stdout","text":["**diff_absorbance:**\n","Results from minima search: \n","       min_wave (nm)   min_abs\n","2.6            680.0 -0.000090\n","5.2            694.0 -0.000360\n","7.8            698.0  0.000231\n","10.4           680.0 -0.000647\n","13.0           685.0  0.000183\n","15.6           697.0  0.000179\n","19.2           680.0  0.000020\n","22.8           680.0  0.000269\n","26.4           692.0  0.000490\n","30.0           685.0 -0.000009\n","33.6           689.0  0.000360\n","39.0           685.0  0.000502\n","44.4           698.0  0.000929\n","49.8           680.0  0.000729\n","55.2           680.0  0.000349\n","60.6           680.0  0.000510\n","70.0           692.0 -0.001587\n","80.0           700.0 -0.001295\n","90.0           680.0 -0.001580\n","100.0          698.0 -0.001251\n","110.0          689.0 -0.001449\n","120.0          694.0 -0.001048\n","Results from maxima search: \n","       max_wave (nm)   max_abs\n","2.6            285.0  0.013803\n","5.2            280.0  0.019824\n","7.8            280.0  0.021635\n","10.4           282.0  0.022350\n","13.0           351.0  0.026362\n","15.6           351.0  0.029771\n","19.2           351.0  0.033829\n","22.8           351.0  0.038207\n","26.4           351.0  0.041357\n","30.0           351.0  0.042259\n","33.6           351.0  0.044024\n","39.0           351.0  0.046504\n","44.4           351.0  0.046545\n","49.8           351.0  0.048442\n","55.2           351.0  0.049867\n","60.6           351.0  0.049868\n","70.0           351.0  0.050189\n","80.0           351.0  0.051151\n","90.0           351.0  0.051826\n","100.0          351.0  0.052369\n","110.0          351.0  0.053745\n","120.0          351.0  0.054380\n","Minimum:  (687.0 nm)\t Maximum:  (351.0 nm)\n"]},{"output_type":"execute_result","data":{"text/plain":["    Volume µl      ΔAbs  min_wave (nm)  max_wave (nm)\n","0         2.6  0.003191          687.0          351.0\n","1         5.2  0.009881          687.0          351.0\n","2         7.8  0.016265          687.0          351.0\n","3        10.4  0.022456          687.0          351.0\n","4        13.0  0.026088          687.0          351.0\n","5        15.6  0.029427          687.0          351.0\n","6        19.2  0.033642          687.0          351.0\n","7        22.8  0.037736          687.0          351.0\n","8        26.4  0.040736          687.0          351.0\n","9        30.0  0.042173          687.0          351.0\n","10       33.6  0.043525          687.0          351.0\n","11       39.0  0.045822          687.0          351.0\n","12       44.4  0.045471          687.0          351.0\n","13       49.8  0.047591          687.0          351.0\n","14       55.2  0.049410          687.0          351.0\n","15       60.6  0.049051          687.0          351.0\n","16       70.0  0.051728          687.0          351.0\n","17       80.0  0.052223          687.0          351.0\n","18       90.0  0.053261          687.0          351.0\n","19      100.0  0.053439          687.0          351.0\n","20      110.0  0.055057          687.0          351.0\n","21      120.0  0.055305          687.0          351.0"],"text/html":["\n","  <div id=\"df-efa225e7-5b0b-43b7-8099-b5a362f86d17\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Volume µl</th>\n","      <th>ΔAbs</th>\n","      <th>min_wave (nm)</th>\n","      <th>max_wave (nm)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.6</td>\n","      <td>0.003191</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.2</td>\n","      <td>0.009881</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.8</td>\n","      <td>0.016265</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10.4</td>\n","      <td>0.022456</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13.0</td>\n","      <td>0.026088</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>15.6</td>\n","      <td>0.029427</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>19.2</td>\n","      <td>0.033642</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>22.8</td>\n","      <td>0.037736</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>26.4</td>\n","      <td>0.040736</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>30.0</td>\n","      <td>0.042173</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>33.6</td>\n","      <td>0.043525</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>39.0</td>\n","      <td>0.045822</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>44.4</td>\n","      <td>0.045471</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>49.8</td>\n","      <td>0.047591</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>55.2</td>\n","      <td>0.049410</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>60.6</td>\n","      <td>0.049051</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>70.0</td>\n","      <td>0.051728</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>80.0</td>\n","      <td>0.052223</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>90.0</td>\n","      <td>0.053261</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>100.0</td>\n","      <td>0.053439</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>110.0</td>\n","      <td>0.055057</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>120.0</td>\n","      <td>0.055305</td>\n","      <td>687.0</td>\n","      <td>351.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efa225e7-5b0b-43b7-8099-b5a362f86d17')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-efa225e7-5b0b-43b7-8099-b5a362f86d17 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-efa225e7-5b0b-43b7-8099-b5a362f86d17');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dca0ae98-9574-48bb-a3e3-a833a27841b6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dca0ae98-9574-48bb-a3e3-a833a27841b6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dca0ae98-9574-48bb-a3e3-a833a27841b6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e8b6b6a6-603a-4546-987a-6e1ab900f226\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('DeltaAbs')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e8b6b6a6-603a-4546-987a-6e1ab900f226 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('DeltaAbs');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"DeltaAbs","summary":"{\n  \"name\": \"DeltaAbs\",\n  \"rows\": 22,\n  \"fields\": [\n    {\n      \"column\": \"Volume \\u00b5l\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.76131068614994,\n        \"min\": 2.6,\n        \"max\": 120.0,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2.6,\n          49.8,\n          26.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0394Abs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.015252820020907271,\n        \"min\": 0.0031912898994593077,\n        \"max\": 0.055304586020514926,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.0031912898994593077,\n          0.047590722003338144,\n          0.04073615523157636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min_wave (nm)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 687.0,\n        \"max\": 687.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          687.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max_wave (nm)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 351.0,\n        \"max\": 351.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          351.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}],"source":["#@title diff_absorbance\n","print(\"**diff_absorbance:**\")\n","\n","#@markdown Here it is advisable to run the function with\n","#@markdown the median option first along with the check_vals in\n","#@markdown order to determine whether a manual input is\n","#@markdown is necessary or not.\n","\n","\n","\n","\n","\n","\n","\n","# @markdown **Method for selecting minimum and maximum**\n","Method = \"Median\" #@param [\"Manual\", \"Mean\", \"Median\"]\n","\n","# @markdown **Manual minimum (nm)**\n","Minimum  = 0 #@param {type:\"number\"}\n","# @markdown **Manual Maximum (nm)**\n","Maximum  = 0 #@param {type:\"number\"}\n","\n","\n","# @markdown **Check the minimum and maximum for each spectrum**\n","Check_vals = True #@param {type:\"boolean\"}\n","\n","\n","\n","\n","\n","DeltaAbs= diff_absorbance(datos, method= Method, check_vals=Check_vals, )\n","DeltaAbs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OtFhMI4LRLU9","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1731339182212,"user_tz":-60,"elapsed":1417,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"60786d6d-6f8a-4903-e3a0-eefb627e75b4"},"outputs":[{"output_type":"display_data","data":{"application/javascript":["'use strict';\n","(function(root) {\n","  function now() {\n","    return new Date();\n","  }\n","\n","  const force = true;\n","\n","  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n","    root._bokeh_onload_callbacks = [];\n","    root._bokeh_is_loading = undefined;\n","  }\n","\n","const JS_MIME_TYPE = 'application/javascript';\n","  const HTML_MIME_TYPE = 'text/html';\n","  const EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n","  const CLASS_NAME = 'output_bokeh rendered_html';\n","\n","  /**\n","   * Render data to the DOM node\n","   */\n","  function render(props, node) {\n","    const script = document.createElement(\"script\");\n","    node.appendChild(script);\n","  }\n","\n","  /**\n","   * Handle when an output is cleared or removed\n","   */\n","  function handleClearOutput(event, handle) {\n","    function drop(id) {\n","      const view = Bokeh.index.get_by_id(id)\n","      if (view != null) {\n","        view.model.document.clear()\n","        Bokeh.index.delete(view)\n","      }\n","    }\n","\n","    const cell = handle.cell;\n","\n","    const id = cell.output_area._bokeh_element_id;\n","    const server_id = cell.output_area._bokeh_server_id;\n","\n","    // Clean up Bokeh references\n","    if (id != null) {\n","      drop(id)\n","    }\n","\n","    if (server_id !== undefined) {\n","      // Clean up Bokeh references\n","      const cmd_clean = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n","      cell.notebook.kernel.execute(cmd_clean, {\n","        iopub: {\n","          output: function(msg) {\n","            const id = msg.content.text.trim()\n","            drop(id)\n","          }\n","        }\n","      });\n","      // Destroy server and session\n","      const cmd_destroy = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n","      cell.notebook.kernel.execute(cmd_destroy);\n","    }\n","  }\n","\n","  /**\n","   * Handle when a new output is added\n","   */\n","  function handleAddOutput(event, handle) {\n","    const output_area = handle.output_area;\n","    const output = handle.output;\n","\n","    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n","    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n","      return\n","    }\n","\n","    const toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n","\n","    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n","      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n","      // store reference to embed id on output_area\n","      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n","    }\n","    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n","      const bk_div = document.createElement(\"div\");\n","      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n","      const script_attrs = bk_div.children[0].attributes;\n","      for (let i = 0; i < script_attrs.length; i++) {\n","        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n","        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n","      }\n","      // store reference to server id on output_area\n","      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n","    }\n","  }\n","\n","  function register_renderer(events, OutputArea) {\n","\n","    function append_mime(data, metadata, element) {\n","      // create a DOM node to render to\n","      const toinsert = this.create_output_subarea(\n","        metadata,\n","        CLASS_NAME,\n","        EXEC_MIME_TYPE\n","      );\n","      this.keyboard_manager.register_events(toinsert);\n","      // Render to node\n","      const props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n","      render(props, toinsert[toinsert.length - 1]);\n","      element.append(toinsert);\n","      return toinsert\n","    }\n","\n","    /* Handle when an output is cleared or removed */\n","    events.on('clear_output.CodeCell', handleClearOutput);\n","    events.on('delete.Cell', handleClearOutput);\n","\n","    /* Handle when a new output is added */\n","    events.on('output_added.OutputArea', handleAddOutput);\n","\n","    /**\n","     * Register the mime type and append_mime function with output_area\n","     */\n","    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n","      /* Is output safe? */\n","      safe: true,\n","      /* Index of renderer in `output_area.display_order` */\n","      index: 0\n","    });\n","  }\n","\n","  // register the mime type if in Jupyter Notebook environment and previously unregistered\n","  if (root.Jupyter !== undefined) {\n","    const events = require('base/js/events');\n","    const OutputArea = require('notebook/js/outputarea').OutputArea;\n","\n","    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n","      register_renderer(events, OutputArea);\n","    }\n","  }\n","  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n","    root._bokeh_timeout = Date.now() + 5000;\n","    root._bokeh_failed_load = false;\n","  }\n","\n","  const NB_LOAD_WARNING = {'data': {'text/html':\n","     \"<div style='background-color: #fdd'>\\n\"+\n","     \"<p>\\n\"+\n","     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n","     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n","     \"</p>\\n\"+\n","     \"<ul>\\n\"+\n","     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n","     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n","     \"</ul>\\n\"+\n","     \"<code>\\n\"+\n","     \"from bokeh.resources import INLINE\\n\"+\n","     \"output_notebook(resources=INLINE)\\n\"+\n","     \"</code>\\n\"+\n","     \"</div>\"}};\n","\n","  function display_loaded(error = null) {\n","    const el = document.getElementById(null);\n","    if (el != null) {\n","      const html = (() => {\n","        if (typeof root.Bokeh === \"undefined\") {\n","          if (error == null) {\n","            return \"BokehJS is loading ...\";\n","          } else {\n","            return \"BokehJS failed to load.\";\n","          }\n","        } else {\n","          const prefix = `BokehJS ${root.Bokeh.version}`;\n","          if (error == null) {\n","            return `${prefix} successfully loaded.`;\n","          } else {\n","            return `${prefix} <b>encountered errors</b> while loading and may not function as expected.`;\n","          }\n","        }\n","      })();\n","      el.innerHTML = html;\n","\n","      if (error != null) {\n","        const wrapper = document.createElement(\"div\");\n","        wrapper.style.overflow = \"auto\";\n","        wrapper.style.height = \"5em\";\n","        wrapper.style.resize = \"vertical\";\n","        const content = document.createElement(\"div\");\n","        content.style.fontFamily = \"monospace\";\n","        content.style.whiteSpace = \"pre-wrap\";\n","        content.style.backgroundColor = \"rgb(255, 221, 221)\";\n","        content.textContent = error.stack ?? error.toString();\n","        wrapper.append(content);\n","        el.append(wrapper);\n","      }\n","    } else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(() => display_loaded(error), 100);\n","    }\n","  }\n","\n","  function run_callbacks() {\n","    try {\n","      root._bokeh_onload_callbacks.forEach(function(callback) {\n","        if (callback != null)\n","          callback();\n","      });\n","    } finally {\n","      delete root._bokeh_onload_callbacks\n","    }\n","    console.debug(\"Bokeh: all callbacks have finished\");\n","  }\n","\n","  function load_libs(css_urls, js_urls, callback) {\n","    if (css_urls == null) css_urls = [];\n","    if (js_urls == null) js_urls = [];\n","\n","    root._bokeh_onload_callbacks.push(callback);\n","    if (root._bokeh_is_loading > 0) {\n","      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n","      return null;\n","    }\n","    if (js_urls == null || js_urls.length === 0) {\n","      run_callbacks();\n","      return null;\n","    }\n","    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n","    root._bokeh_is_loading = css_urls.length + js_urls.length;\n","\n","    function on_load() {\n","      root._bokeh_is_loading--;\n","      if (root._bokeh_is_loading === 0) {\n","        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n","        run_callbacks()\n","      }\n","    }\n","\n","    function on_error(url) {\n","      console.error(\"failed to load \" + url);\n","    }\n","\n","    for (let i = 0; i < css_urls.length; i++) {\n","      const url = css_urls[i];\n","      const element = document.createElement(\"link\");\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.rel = \"stylesheet\";\n","      element.type = \"text/css\";\n","      element.href = url;\n","      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n","      document.body.appendChild(element);\n","    }\n","\n","    for (let i = 0; i < js_urls.length; i++) {\n","      const url = js_urls[i];\n","      const element = document.createElement('script');\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.async = false;\n","      element.src = url;\n","      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n","      document.head.appendChild(element);\n","    }\n","  };\n","\n","  function inject_raw_css(css) {\n","    const element = document.createElement(\"style\");\n","    element.appendChild(document.createTextNode(css));\n","    document.body.appendChild(element);\n","  }\n","\n","  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.4.3.min.js\"];\n","  const css_urls = [];\n","\n","  const inline_js = [    function(Bokeh) {\n","      Bokeh.set_log_level(\"info\");\n","    },\n","function(Bokeh) {\n","    }\n","  ];\n","\n","  function run_inline_js() {\n","    if (root.Bokeh !== undefined || force === true) {\n","      try {\n","            for (let i = 0; i < inline_js.length; i++) {\n","      inline_js[i].call(root, root.Bokeh);\n","    }\n","\n","      } catch (error) {throw error;\n","      }} else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(run_inline_js, 100);\n","    } else if (!root._bokeh_failed_load) {\n","      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n","      root._bokeh_failed_load = true;\n","    } else if (force !== true) {\n","      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n","      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n","    }\n","  }\n","\n","  if (root._bokeh_is_loading === 0) {\n","    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n","    run_inline_js();\n","  } else {\n","    load_libs(css_urls, js_urls, function() {\n","      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n","      run_inline_js();\n","    });\n","  }\n","}(window));"],"application/vnd.bokehjs_load.v0+json":"'use strict';\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  const NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded(error = null) {\n    const el = document.getElementById(null);\n    if (el != null) {\n      const html = (() => {\n        if (typeof root.Bokeh === \"undefined\") {\n          if (error == null) {\n            return \"BokehJS is loading ...\";\n          } else {\n            return \"BokehJS failed to load.\";\n          }\n        } else {\n          const prefix = `BokehJS ${root.Bokeh.version}`;\n          if (error == null) {\n            return `${prefix} successfully loaded.`;\n          } else {\n            return `${prefix} <b>encountered errors</b> while loading and may not function as expected.`;\n          }\n        }\n      })();\n      el.innerHTML = html;\n\n      if (error != null) {\n        const wrapper = document.createElement(\"div\");\n        wrapper.style.overflow = \"auto\";\n        wrapper.style.height = \"5em\";\n        wrapper.style.resize = \"vertical\";\n        const content = document.createElement(\"div\");\n        content.style.fontFamily = \"monospace\";\n        content.style.whiteSpace = \"pre-wrap\";\n        content.style.backgroundColor = \"rgb(255, 221, 221)\";\n        content.textContent = error.stack ?? error.toString();\n        wrapper.append(content);\n        el.append(wrapper);\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(() => display_loaded(error), 100);\n    }\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.4.3.min.js\"];\n  const css_urls = [];\n\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {\n    }\n  ];\n\n  function run_inline_js() {\n    if (root.Bokeh !== undefined || force === true) {\n      try {\n            for (let i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n\n      } catch (error) {throw error;\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"},"metadata":{}},{"output_type":"display_data","data":{"text/html":["\n","  <div id=\"a0cce45f-a291-41c1-ba2e-ef0aad20c40e\" data-root-id=\"p1001\" style=\"display: contents;\"></div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["(function(root) {\n","  function embed_document(root) {\n","  const docs_json = {\"e6cea614-3ac6-43bc-95a3-d754eae65f3c\":{\"version\":\"3.4.3\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"Figure\",\"id\":\"p1001\",\"attributes\":{\"width\":1200,\"height\":700,\"x_range\":{\"type\":\"object\",\"name\":\"DataRange1d\",\"id\":\"p1002\"},\"y_range\":{\"type\":\"object\",\"name\":\"DataRange1d\",\"id\":\"p1003\"},\"x_scale\":{\"type\":\"object\",\"name\":\"LinearScale\",\"id\":\"p1011\"},\"y_scale\":{\"type\":\"object\",\"name\":\"LinearScale\",\"id\":\"p1012\"},\"title\":{\"type\":\"object\",\"name\":\"Title\",\"id\":\"p1004\",\"attributes\":{\"text\":\"Spectra at Different Volumes of ***\",\"text_font_size\":\"20pt\"}},\"renderers\":[{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1040\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1034\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1035\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1036\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1041\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1042\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1037\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#440154\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1038\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#440154\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1039\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#440154\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1051\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1045\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1046\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1047\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1052\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1053\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1048\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#471163\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1049\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#471163\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1050\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#471163\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1061\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1055\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1056\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1057\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1062\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1063\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1058\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#482172\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1059\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#482172\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1060\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#482172\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1071\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1065\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1066\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1067\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1072\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1073\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1068\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#462F7C\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1069\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#462F7C\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1070\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#462F7C\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1081\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1075\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1076\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1077\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"AAAAAADghUAAAAAAANiFQAAAAAAA0IVAAAAAAADIhUAAAAAAAMCFQAAAAAAAuIVAAAAAAACwhUAAAAAAAKiFQAAAAAAAoIVAAAAAAACYhUAAAAAAAJCFQAAAAAAAiIVAAAAAAACAhUAAAAAAAHiFQAAAAAAAcIVAAAAAAABohUAAAAAAAGCFQAAAAAAAWIVAAAAAAABQhUAAAAAAAEiFQAAAAAAAQIVAAAAAAAA4hUAAAAAAADCFQAAAAAAAKIVAAAAAAAAghUAAAAAAABiFQAAAAAAAEIVAAAAAAAAIhUAAAAAAAACFQAAAAAAA+IRAAAAAAADwhEAAAAAAAOiEQAAAAAAA4IRAAAAAAADYhEAAAAAAANCEQAAAAAAAyIRAAAAAAADAhEAAAAAAALiEQAAAAAAAsIRAAAAAAACohEAAAAAAAKCEQAAAAAAAmIRAAAAAAACQhEAAAAAAAIiEQAAAAAAAgIRAAAAAAAB4hEAAAAAAAHCEQAAAAAAAaIRAAAAAAABghEAAAAAAAFiEQAAAAAAAUIRAAAAAAABIhEAAAAAAAECEQAAAAAAAOIRAAAAAAAAwhEAAAAAAACiEQAAAAAAAIIRAAAAAAAAYhEAAAAAAABCEQAAAAAAACIRAAAAAAAAAhEAAAAAAAPiDQAAAAAAA8INAAAAAAADog0AAAAAAAOCDQAAAAAAA2INAAAAAAADQg0AAAAAAAMiDQAAAAAAAwINAAAAAAAC4g0AAAAAAALCDQAAAAAAAqINAAAAAAACgg0AAAAAAAJiDQAAAAAAAkINAAAAAAACIg0AAAAAAAICDQAAAAAAAeINAAAAAAABwg0AAAAAAAGiDQAAAAAAAYINAAAAAAABYg0AAAAAAAFCDQAAAAAAASINAAAAAAABAg0AAAAAAADiDQAAAAAAAMINAAAAAAAAog0AAAAAAACCDQAAAAAAAGINAAAAAAAAQg0AAAAAAAAiDQAAAAAAAAINAAAAAAAD4gkAAAAAAAPCCQAAAAAAA6IJAAAAAAADggkAAAAAAANiCQAAAAAAA0IJAAAAAAADIgkAAAAAAAMCCQAAAAAAAuIJAAAAAAACwgkAAAAAAAKiCQAAAAAAAoIJAAAAAAACYgkAAAAAAAJCCQAAAAAAAiIJAAAAAAACAgkAAAAAAAHiCQAAAAAAAcIJAAAAAAABogkAAAAAAAGCCQAAAAAAAWIJAAAAAAABQgkAAAAAAAEiCQAAAAAAAQIJAAAAAAAA4gkAAAAAAADCCQAAAAAAAKIJAAAAAAAAggkAAAAAAABiCQAAAAAAAEIJAAAAAAAAIgkAAAAAAAACCQAAAAAAA+IFAAAAAAADwgUAAAAAAAOiBQAAAAAAA4IFAAAAAAADYgUAAAAAAANCBQAAAAAAAyIFAAAAAAADAgUAAAAAAALiBQAAAAAAAsIFAAAAAAACogUAAAAAAAKCBQAAAAAAAmIFAAAAAAACQgUAAAAAAAIiBQAAAAAAAgIFAAAAAAAB4gUAAAAAAAHCBQAAAAAAAaIFAAAAAAABggUAAAAAAAFiBQAAAAAAAUIFAAAAAAABIgUAAAAAAAECBQAAAAAAAOIFAAAAAAAAwgUAAAAAAACiBQAAAAAAAIIFAAAAAAAAYgUAAAAAAABCBQAAAAAAACIFAAAAAAAAAgUAAAAAAAPiAQAAAAAAA8IBAAAAAAADogEAAAAAAAOCAQAAAAAAA2IBAAAAAAADQgEAAAAAAAMiAQAAAAAAAwIBAAAAAAAC4gEAAAAAAALCAQAAAAAAAqIBAAAAAAACggEAAAAAAAJiAQAAAAAAAkIBAAAAAAACIgEAAAAAAAICAQAAAAAAAeIBAAAAAAABwgEAAAAAAAGiAQAAAAAAAYIBAAAAAAABYgEAAAAAAAFCAQAAAAAAASIBAAAAAAABAgEAAAAAAADiAQAAAAAAAMIBAAAAAAAAogEAAAAAAACCAQAAAAAAAGIBAAAAAAAAQgEAAAAAAAAiAQAAAAAAAAIBAAAAAAADwf0AAAAAAAOB/QAAAAAAA0H9AAAAAAADAf0AAAAAAALB/QAAAAAAAoH9AAAAAAACQf0AAAAAAAIB/QAAAAAAAcH9AAAAAAABgf0AAAAAAAFB/QAAAAAAAQH9AAAAAAAAwf0AAAAAAACB/QAAAAAAAEH9AAAAAAAAAf0AAAAAAAPB+QAAAAAAA4H5AAAAAAADQfkAAAAAAAMB+QAAAAAAAsH5AAAAAAACgfkAAAAAAAJB+QAAAAAAAgH5AAAAAAABwfkAAAAAAAGB+QAAAAAAAUH5AAAAAAABAfkAAAAAAADB+QAAAAAAAIH5AAAAAAAAQfkAAAAAAAAB+QAAAAAAA8H1AAAAAAADgfUAAAAAAANB9QAAAAAAAwH1AAAAAAACwfUAAAAAAAKB9QAAAAAAAkH1AAAAAAACAfUAAAAAAAHB9QAAAAAAAYH1AAAAAAABQfUAAAAAAAEB9QAAAAAAAMH1AAAAAAAAgfUAAAAAAABB9QAAAAAAAAH1AAAAAAADwfEAAAAAAAOB8QAAAAAAA0HxAAAAAAADAfEAAAAAAALB8QAAAAAAAoHxAAAAAAACQfEAAAAAAAIB8QAAAAAAAcHxAAAAAAABgfEAAAAAAAFB8QAAAAAAAQHxAAAAAAAAwfEAAAAAAACB8QAAAAAAAEHxAAAAAAAAAfEAAAAAAAPB7QAAAAAAA4HtAAAAAAADQe0AAAAAAAMB7QAAAAAAAsHtAAAAAAACge0AAAAAAAJB7QAAAAAAAgHtAAAAAAABwe0AAAAAAAGB7QAAAAAAAUHtAAAAAAABAe0AAAAAAADB7QAAAAAAAIHtAAAAAAAAQe0AAAAAAAAB7QAAAAAAA8HpAAAAAAADgekAAAAAAANB6QAAAAAAAwHpAAAAAAACwekAAAAAAAKB6QAAAAAAAkHpAAAAAAACAekAAAAAAAHB6QAAAAAAAYHpAAAAAAABQekAAAAAAAEB6QAAAAAAAMHpAAAAAAAAgekAAAAAAABB6QAAAAAAAAHpAAAAAAADweUAAAAAAAOB5QAAAAAAA0HlAAAAAAADAeUAAAAAAALB5QAAAAAAAoHlAAAAAAACQeUAAAAAAAIB5QAAAAAAAcHlAAAAAAABgeUAAAAAAAFB5QAAAAAAAQHlAAAAAAAAweUAAAAAAACB5QAAAAAAAEHlAAAAAAAAAeUAAAAAAAPB4QAAAAAAA4HhAAAAAAADQeEAAAAAAAMB4QAAAAAAAsHhAAAAAAACgeEAAAAAAAJB4QAAAAAAAgHhAAAAAAABweEAAAAAAAGB4QAAAAAAAUHhAAAAAAABAeEAAAAAAADB4QAAAAAAAIHhAAAAAAAAQeEAAAAAAAAB4QAAAAAAA8HdAAAAAAADgd0AAAAAAANB3QAAAAAAAwHdAAAAAAACwd0AAAAAAAKB3QAAAAAAAkHdAAAAAAACAd0AAAAAAAHB3QAAAAAAAYHdAAAAAAABQd0AAAAAAAEB3QAAAAAAAMHdAAAAAAAAgd0AAAAAAABB3QAAAAAAAAHdAAAAAAADwdkAAAAAAAOB2QAAAAAAA0HZAAAAAAADAdkAAAAAAALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1082\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1083\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1078\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#423D84\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1079\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#423D84\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1080\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#423D84\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1091\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1085\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1086\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1087\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"AAAAAADghUAAAAAAANiFQAAAAAAA0IVAAAAAAADIhUAAAAAAAMCFQAAAAAAAuIVAAAAAAACwhUAAAAAAAKiFQAAAAAAAoIVAAAAAAACYhUAAAAAAAJCFQAAAAAAAiIVAAAAAAACAhUAAAAAAAHiFQAAAAAAAcIVAAAAAAABohUAAAAAAAGCFQAAAAAAAWIVAAAAAAABQhUAAAAAAAEiFQAAAAAAAQIVAAAAAAAA4hUAAAAAAADCFQAAAAAAAKIVAAAAAAAAghUAAAAAAABiFQAAAAAAAEIVAAAAAAAAIhUAAAAAAAACFQAAAAAAA+IRAAAAAAADwhEAAAAAAAOiEQAAAAAAA4IRAAAAAAADYhEAAAAAAANCEQAAAAAAAyIRAAAAAAADAhEAAAAAAALiEQAAAAAAAsIRAAAAAAACohEAAAAAAAKCEQAAAAAAAmIRAAAAAAACQhEAAAAAAAIiEQAAAAAAAgIRAAAAAAAB4hEAAAAAAAHCEQAAAAAAAaIRAAAAAAABghEAAAAAAAFiEQAAAAAAAUIRAAAAAAABIhEAAAAAAAECEQAAAAAAAOIRAAAAAAAAwhEAAAAAAACiEQAAAAAAAIIRAAAAAAAAYhEAAAAAAABCEQAAAAAAACIRAAAAAAAAAhEAAAAAAAPiDQAAAAAAA8INAAAAAAADog0AAAAAAAOCDQAAAAAAA2INAAAAAAADQg0AAAAAAAMiDQAAAAAAAwINAAAAAAAC4g0AAAAAAALCDQAAAAAAAqINAAAAAAACgg0AAAAAAAJiDQAAAAAAAkINAAAAAAACIg0AAAAAAAICDQAAAAAAAeINAAAAAAABwg0AAAAAAAGiDQAAAAAAAYINAAAAAAABYg0AAAAAAAFCDQAAAAAAASINAAAAAAABAg0AAAAAAADiDQAAAAAAAMINAAAAAAAAog0AAAAAAACCDQAAAAAAAGINAAAAAAAAQg0AAAAAAAAiDQAAAAAAAAINAAAAAAAD4gkAAAAAAAPCCQAAAAAAA6IJAAAAAAADggkAAAAAAANiCQAAAAAAA0IJAAAAAAADIgkAAAAAAAMCCQAAAAAAAuIJAAAAAAACwgkAAAAAAAKiCQAAAAAAAoIJAAAAAAACYgkAAAAAAAJCCQAAAAAAAiIJAAAAAAACAgkAAAAAAAHiCQAAAAAAAcIJAAAAAAABogkAAAAAAAGCCQAAAAAAAWIJAAAAAAABQgkAAAAAAAEiCQAAAAAAAQIJAAAAAAAA4gkAAAAAAADCCQAAAAAAAKIJAAAAAAAAggkAAAAAAABiCQAAAAAAAEIJAAAAAAAAIgkAAAAAAAACCQAAAAAAA+IFAAAAAAADwgUAAAAAAAOiBQAAAAAAA4IFAAAAAAADYgUAAAAAAANCBQAAAAAAAyIFAAAAAAADAgUAAAAAAALiBQAAAAAAAsIFAAAAAAACogUAAAAAAAKCBQAAAAAAAmIFAAAAAAACQgUAAAAAAAIiBQAAAAAAAgIFAAAAAAAB4gUAAAAAAAHCBQAAAAAAAaIFAAAAAAABggUAAAAAAAFiBQAAAAAAAUIFAAAAAAABIgUAAAAAAAECBQAAAAAAAOIFAAAAAAAAwgUAAAAAAACiBQAAAAAAAIIFAAAAAAAAYgUAAAAAAABCBQAAAAAAACIFAAAAAAAAAgUAAAAAAAPiAQAAAAAAA8IBAAAAAAADogEAAAAAAAOCAQAAAAAAA2IBAAAAAAADQgEAAAAAAAMiAQAAAAAAAwIBAAAAAAAC4gEAAAAAAALCAQAAAAAAAqIBAAAAAAACggEAAAAAAAJiAQAAAAAAAkIBAAAAAAACIgEAAAAAAAICAQAAAAAAAeIBAAAAAAABwgEAAAAAAAGiAQAAAAAAAYIBAAAAAAABYgEAAAAAAAFCAQAAAAAAASIBAAAAAAABAgEAAAAAAADiAQAAAAAAAMIBAAAAAAAAogEAAAAAAACCAQAAAAAAAGIBAAAAAAAAQgEAAAAAAAAiAQAAAAAAAAIBAAAAAAADwf0AAAAAAAOB/QAAAAAAA0H9AAAAAAADAf0AAAAAAALB/QAAAAAAAoH9AAAAAAACQf0AAAAAAAIB/QAAAAAAAcH9AAAAAAABgf0AAAAAAAFB/QAAAAAAAQH9AAAAAAAAwf0AAAAAAACB/QAAAAAAAEH9AAAAAAAAAf0AAAAAAAPB+QAAAAAAA4H5AAAAAAADQfkAAAAAAAMB+QAAAAAAAsH5AAAAAAACgfkAAAAAAAJB+QAAAAAAAgH5AAAAAAABwfkAAAAAAAGB+QAAAAAAAUH5AAAAAAABAfkAAAAAAADB+QAAAAAAAIH5AAAAAAAAQfkAAAAAAAAB+QAAAAAAA8H1AAAAAAADgfUAAAAAAANB9QAAAAAAAwH1AAAAAAACwfUAAAAAAAKB9QAAAAAAAkH1AAAAAAACAfUAAAAAAAHB9QAAAAAAAYH1AAAAAAABQfUAAAAAAAEB9QAAAAAAAMH1AAAAAAAAgfUAAAAAAABB9QAAAAAAAAH1AAAAAAADwfEAAAAAAAOB8QAAAAAAA0HxAAAAAAADAfEAAAAAAALB8QAAAAAAAoHxAAAAAAACQfEAAAAAAAIB8QAAAAAAAcHxAAAAAAABgfEAAAAAAAFB8QAAAAAAAQHxAAAAAAAAwfEAAAAAAACB8QAAAAAAAEHxAAAAAAAAAfEAAAAAAAPB7QAAAAAAA4HtAAAAAAADQe0AAAAAAAMB7QAAAAAAAsHtAAAAAAACge0AAAAAAAJB7QAAAAAAAgHtAAAAAAABwe0AAAAAAAGB7QAAAAAAAUHtAAAAAAABAe0AAAAAAADB7QAAAAAAAIHtAAAAAAAAQe0AAAAAAAAB7QAAAAAAA8HpAAAAAAADgekAAAAAAANB6QAAAAAAAwHpAAAAAAACwekAAAAAAAKB6QAAAAAAAkHpAAAAAAACAekAAAAAAAHB6QAAAAAAAYHpAAAAAAABQekAAAAAAAEB6QAAAAAAAMHpAAAAAAAAgekAAAAAAABB6QAAAAAAAAHpAAAAAAADweUAAAAAAAOB5QAAAAAAA0HlAAAAAAADAeUAAAAAAALB5QAAAAAAAoHlAAAAAAACQeUAAAAAAAIB5QAAAAAAAcHlAAAAAAABgeUAAAAAAAFB5QAAAAAAAQHlAAAAAAAAweUAAAAAAACB5QAAAAAAAEHlAAAAAAAAAeUAAAAAAAPB4QAAAAAAA4HhAAAAAAADQeEAAAAAAAMB4QAAAAAAAsHhAAAAAAACgeEAAAAAAAJB4QAAAAAAAgHhAAAAAAABweEAAAAAAAGB4QAAAAAAAUHhAAAAAAABAeEAAAAAAADB4QAAAAAAAIHhAAAAAAAAQeEAAAAAAAAB4QAAAAAAA8HdAAAAAAADgd0AAAAAAANB3QAAAAAAAwHdAAAAAAACwd0AAAAAAAKB3QAAAAAAAkHdAAAAAAACAd0AAAAAAAHB3QAAAAAAAYHdAAAAAAABQd0AAAAAAAEB3QAAAAAAAMHdAAAAAAAAgd0AAAAAAABB3QAAAAAAAAHdAAAAAAADwdkAAAAAAAOB2QAAAAAAA0HZAAAAAAADAdkAAAAAAALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1092\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1093\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1088\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#3D4A89\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1089\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#3D4A89\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1090\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#3D4A89\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1101\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1095\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1096\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1097\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1102\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1103\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1098\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#38578C\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1099\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#38578C\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1100\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#38578C\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1111\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1105\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1106\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1107\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1112\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1113\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1108\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#32638D\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1109\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#32638D\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1110\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#32638D\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1121\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1115\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1116\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1117\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1122\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1123\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1118\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#2D6E8E\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1119\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#2D6E8E\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1120\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#2D6E8E\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1131\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1125\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1126\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1127\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1132\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1133\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1128\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#287A8E\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1129\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#287A8E\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1130\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#287A8E\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1141\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1135\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1136\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1137\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1142\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1143\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1138\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#24848D\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1139\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#24848D\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1140\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#24848D\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1151\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1145\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1146\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1147\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1152\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1153\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1148\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#208F8C\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1149\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#208F8C\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1150\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#208F8C\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1161\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1155\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1156\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1157\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1162\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1163\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1158\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1E9A89\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1159\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1E9A89\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1160\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1E9A89\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1171\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1165\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1166\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1167\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1172\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1173\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1168\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#20A585\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1169\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#20A585\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1170\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#20A585\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1181\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1175\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1176\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1177\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1182\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1183\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1178\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#2AB07E\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1179\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#2AB07E\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1180\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#2AB07E\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1191\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1185\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1186\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1187\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1192\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1193\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1188\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#39B976\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1189\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#39B976\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1190\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#39B976\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1201\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1195\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1196\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1197\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1202\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1203\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1198\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#4FC369\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1199\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#4FC369\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1200\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#4FC369\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1211\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1205\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1206\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1207\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1212\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1213\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1208\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#69CC5B\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1209\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#69CC5B\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1210\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#69CC5B\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1221\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1215\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1216\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1217\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1222\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1223\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1218\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#83D34B\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1219\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#83D34B\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1220\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#83D34B\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1231\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1225\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1226\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1227\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1232\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1233\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1228\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#A2DA37\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1229\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#A2DA37\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1230\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#A2DA37\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1241\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1235\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1236\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1237\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1242\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1243\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1238\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#BFDF24\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1239\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#BFDF24\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1240\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#BFDF24\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1251\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1245\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1246\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1247\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"AAAAAADghUAAAAAAANiFQAAAAAAA0IVAAAAAAADIhUAAAAAAAMCFQAAAAAAAuIVAAAAAAACwhUAAAAAAAKiFQAAAAAAAoIVAAAAAAACYhUAAAAAAAJCFQAAAAAAAiIVAAAAAAACAhUAAAAAAAHiFQAAAAAAAcIVAAAAAAABohUAAAAAAAGCFQAAAAAAAWIVAAAAAAABQhUAAAAAAAEiFQAAAAAAAQIVAAAAAAAA4hUAAAAAAADCFQAAAAAAAKIVAAAAAAAAghUAAAAAAABiFQAAAAAAAEIVAAAAAAAAIhUAAAAAAAACFQAAAAAAA+IRAAAAAAADwhEAAAAAAAOiEQAAAAAAA4IRAAAAAAADYhEAAAAAAANCEQAAAAAAAyIRAAAAAAADAhEAAAAAAALiEQAAAAAAAsIRAAAAAAACohEAAAAAAAKCEQAAAAAAAmIRAAAAAAACQhEAAAAAAAIiEQAAAAAAAgIRAAAAAAAB4hEAAAAAAAHCEQAAAAAAAaIRAAAAAAABghEAAAAAAAFiEQAAAAAAAUIRAAAAAAABIhEAAAAAAAECEQAAAAAAAOIRAAAAAAAAwhEAAAAAAACiEQAAAAAAAIIRAAAAAAAAYhEAAAAAAABCEQAAAAAAACIRAAAAAAAAAhEAAAAAAAPiDQAAAAAAA8INAAAAAAADog0AAAAAAAOCDQAAAAAAA2INAAAAAAADQg0AAAAAAAMiDQAAAAAAAwINAAAAAAAC4g0AAAAAAALCDQAAAAAAAqINAAAAAAACgg0AAAAAAAJiDQAAAAAAAkINAAAAAAACIg0AAAAAAAICDQAAAAAAAeINAAAAAAABwg0AAAAAAAGiDQAAAAAAAYINAAAAAAABYg0AAAAAAAFCDQAAAAAAASINAAAAAAABAg0AAAAAAADiDQAAAAAAAMINAAAAAAAAog0AAAAAAACCDQAAAAAAAGINAAAAAAAAQg0AAAAAAAAiDQAAAAAAAAINAAAAAAAD4gkAAAAAAAPCCQAAAAAAA6IJAAAAAAADggkAAAAAAANiCQAAAAAAA0IJAAAAAAADIgkAAAAAAAMCCQAAAAAAAuIJAAAAAAACwgkAAAAAAAKiCQAAAAAAAoIJAAAAAAACYgkAAAAAAAJCCQAAAAAAAiIJAAAAAAACAgkAAAAAAAHiCQAAAAAAAcIJAAAAAAABogkAAAAAAAGCCQAAAAAAAWIJAAAAAAABQgkAAAAAAAEiCQAAAAAAAQIJAAAAAAAA4gkAAAAAAADCCQAAAAAAAKIJAAAAAAAAggkAAAAAAABiCQAAAAAAAEIJAAAAAAAAIgkAAAAAAAACCQAAAAAAA+IFAAAAAAADwgUAAAAAAAOiBQAAAAAAA4IFAAAAAAADYgUAAAAAAANCBQAAAAAAAyIFAAAAAAADAgUAAAAAAALiBQAAAAAAAsIFAAAAAAACogUAAAAAAAKCBQAAAAAAAmIFAAAAAAACQgUAAAAAAAIiBQAAAAAAAgIFAAAAAAAB4gUAAAAAAAHCBQAAAAAAAaIFAAAAAAABggUAAAAAAAFiBQAAAAAAAUIFAAAAAAABIgUAAAAAAAECBQAAAAAAAOIFAAAAAAAAwgUAAAAAAACiBQAAAAAAAIIFAAAAAAAAYgUAAAAAAABCBQAAAAAAACIFAAAAAAAAAgUAAAAAAAPiAQAAAAAAA8IBAAAAAAADogEAAAAAAAOCAQAAAAAAA2IBAAAAAAADQgEAAAAAAAMiAQAAAAAAAwIBAAAAAAAC4gEAAAAAAALCAQAAAAAAAqIBAAAAAAACggEAAAAAAAJiAQAAAAAAAkIBAAAAAAACIgEAAAAAAAICAQAAAAAAAeIBAAAAAAABwgEAAAAAAAGiAQAAAAAAAYIBAAAAAAABYgEAAAAAAAFCAQAAAAAAASIBAAAAAAABAgEAAAAAAADiAQAAAAAAAMIBAAAAAAAAogEAAAAAAACCAQAAAAAAAGIBAAAAAAAAQgEAAAAAAAAiAQAAAAAAAAIBAAAAAAADwf0AAAAAAAOB/QAAAAAAA0H9AAAAAAADAf0AAAAAAALB/QAAAAAAAoH9AAAAAAACQf0AAAAAAAIB/QAAAAAAAcH9AAAAAAABgf0AAAAAAAFB/QAAAAAAAQH9AAAAAAAAwf0AAAAAAACB/QAAAAAAAEH9AAAAAAAAAf0AAAAAAAPB+QAAAAAAA4H5AAAAAAADQfkAAAAAAAMB+QAAAAAAAsH5AAAAAAACgfkAAAAAAAJB+QAAAAAAAgH5AAAAAAABwfkAAAAAAAGB+QAAAAAAAUH5AAAAAAABAfkAAAAAAADB+QAAAAAAAIH5AAAAAAAAQfkAAAAAAAAB+QAAAAAAA8H1AAAAAAADgfUAAAAAAANB9QAAAAAAAwH1AAAAAAACwfUAAAAAAAKB9QAAAAAAAkH1AAAAAAACAfUAAAAAAAHB9QAAAAAAAYH1AAAAAAABQfUAAAAAAAEB9QAAAAAAAMH1AAAAAAAAgfUAAAAAAABB9QAAAAAAAAH1AAAAAAADwfEAAAAAAAOB8QAAAAAAA0HxAAAAAAADAfEAAAAAAALB8QAAAAAAAoHxAAAAAAACQfEAAAAAAAIB8QAAAAAAAcHxAAAAAAABgfEAAAAAAAFB8QAAAAAAAQHxAAAAAAAAwfEAAAAAAACB8QAAAAAAAEHxAAAAAAAAAfEAAAAAAAPB7QAAAAAAA4HtAAAAAAADQe0AAAAAAAMB7QAAAAAAAsHtAAAAAAACge0AAAAAAAJB7QAAAAAAAgHtAAAAAAABwe0AAAAAAAGB7QAAAAAAAUHtAAAAAAABAe0AAAAAAADB7QAAAAAAAIHtAAAAAAAAQe0AAAAAAAAB7QAAAAAAA8HpAAAAAAADgekAAAAAAANB6QAAAAAAAwHpAAAAAAACwekAAAAAAAKB6QAAAAAAAkHpAAAAAAACAekAAAAAAAHB6QAAAAAAAYHpAAAAAAABQekAAAAAAAEB6QAAAAAAAMHpAAAAAAAAgekAAAAAAABB6QAAAAAAAAHpAAAAAAADweUAAAAAAAOB5QAAAAAAA0HlAAAAAAADAeUAAAAAAALB5QAAAAAAAoHlAAAAAAACQeUAAAAAAAIB5QAAAAAAAcHlAAAAAAABgeUAAAAAAAFB5QAAAAAAAQHlAAAAAAAAweUAAAAAAACB5QAAAAAAAEHlAAAAAAAAAeUAAAAAAAPB4QAAAAAAA4HhAAAAAAADQeEAAAAAAAMB4QAAAAAAAsHhAAAAAAACgeEAAAAAAAJB4QAAAAAAAgHhAAAAAAABweEAAAAAAAGB4QAAAAAAAUHhAAAAAAABAeEAAAAAAADB4QAAAAAAAIHhAAAAAAAAQeEAAAAAAAAB4QAAAAAAA8HdAAAAAAADgd0AAAAAAANB3QAAAAAAAwHdAAAAAAACwd0AAAAAAAKB3QAAAAAAAkHdAAAAAAACAd0AAAAAAAHB3QAAAAAAAYHdAAAAAAABQd0AAAAAAAEB3QAAAAAAAMHdAAAAAAAAgd0AAAAAAABB3QAAAAAAAAHdAAAAAAADwdkAAAAAAAOB2QAAAAAAA0HZAAAAAAADAdkAAAAAAALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1252\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1253\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1248\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#DFE318\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1249\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#DFE318\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1250\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#DFE318\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1261\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1255\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1256\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1257\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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ALB2QAAAAAAAoHZAAAAAAACQdkAAAAAAAIB2QAAAAAAAcHZAAAAAAABgdkAAAAAAAFB2QAAAAAAAQHZAAAAAAAAwdkAAAAAAACB2QAAAAAAAEHZAAAAAAAAAdkAAAAAAAPB1QAAAAAAA4HVAAAAAAADQdUAAAAAAAMB1QAAAAAAAsHVAAAAAAACgdUAAAAAAAJB1QAAAAAAAgHVAAAAAAABwdUAAAAAAAGB1QAAAAAAAUHVAAAAAAABAdUAAAAAAADB1QAAAAAAAIHVAAAAAAAAQdUAAAAAAAAB1QAAAAAAA8HRAAAAAAADgdEAAAAAAANB0QAAAAAAAwHRAAAAAAACwdEAAAAAAAKB0QAAAAAAAkHRAAAAAAACAdEAAAAAAAHB0QAAAAAAAYHRAAAAAAABQdEAAAAAAAEB0QAAAAAAAMHRAAAAAAAAgdEAAAAAAABB0QAAAAAAAAHRAAAAAAADwc0AAAAAAAOBzQAAAAAAA0HNAAAAAAADAc0AAAAAAALBzQAAAAAAAoHNAAAAAAACQc0AAAAAAAIBzQAAAAAAAcHNAAAAAAABgc0AAAAAAAFBzQAAAAAAAQHNAAAAAAAAwc0AAAAAAACBzQAAAAAAAEHNAAAAAAAAAc0AAAAAAAPByQAAAAAAA4HJAAAAAAADQckAAAAAAAMByQAAAAAAAsHJAAAAAAACgckAAAAAAAJByQAAAAAAAgHJAAAAAAABwckAAAAAAAGByQAAAAAAAUHJAAAAAAABAckAAAAAAADByQAAAAAAAIHJAAAAAAAAQckAAAAAAAAByQAAAAAAA8HFAAAAAAADgcUAAAAAAANBxQAAAAAAAwHFAAAAAAACwcUAAAAAAAKBxQAAAAAAAkHFAAAAAAACAcUA=\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[421],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1262\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1263\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1258\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#FDE724\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1259\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#FDE724\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1260\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#FDE724\",\"line_alpha\":0.2,\"line_width\":2}}}}],\"toolbar\":{\"type\":\"object\",\"name\":\"Toolbar\",\"id\":\"p1010\",\"attributes\":{\"tools\":[{\"type\":\"object\",\"name\":\"PanTool\",\"id\":\"p1023\"},{\"type\":\"object\",\"name\":\"WheelZoomTool\",\"id\":\"p1024\",\"attributes\":{\"renderers\":\"auto\"}},{\"type\":\"object\",\"name\":\"BoxZoomTool\",\"id\":\"p1025\",\"attributes\":{\"overlay\":{\"type\":\"object\",\"name\":\"BoxAnnotation\",\"id\":\"p1026\",\"attributes\":{\"syncable\":false,\"level\":\"overlay\",\"visible\":false,\"left\":{\"type\":\"number\",\"value\":\"nan\"},\"right\":{\"type\":\"number\",\"value\":\"nan\"},\"top\":{\"type\":\"number\",\"value\":\"nan\"},\"bottom\":{\"type\":\"number\",\"value\":\"nan\"},\"left_units\":\"canvas\",\"right_units\":\"canvas\",\"top_units\":\"canvas\",\"bottom_units\":\"canvas\",\"line_color\":\"black\",\"line_alpha\":1.0,\"line_width\":2,\"line_dash\":[4,4],\"fill_color\":\"lightgrey\",\"fill_alpha\":0.5}}}},{\"type\":\"object\",\"name\":\"SaveTool\",\"id\":\"p1031\"},{\"type\":\"object\",\"name\":\"ResetTool\",\"id\":\"p1032\"},{\"type\":\"object\",\"name\":\"HelpTool\",\"id\":\"p1033\"}]}},\"toolbar_location\":\"below\",\"left\":[{\"type\":\"object\",\"name\":\"LinearAxis\",\"id\":\"p1018\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"BasicTicker\",\"id\":\"p1019\",\"attributes\":{\"mantissas\":[1,2,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"BasicTickFormatter\",\"id\":\"p1020\"},\"axis_label\":\"Absorbance\",\"axis_label_text_font_size\":\"16pt\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1021\"},\"major_label_text_font_size\":\"12pt\"}}],\"below\":[{\"type\":\"object\",\"name\":\"LinearAxis\",\"id\":\"p1013\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"BasicTicker\",\"id\":\"p1014\",\"attributes\":{\"mantissas\":[1,2,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"BasicTickFormatter\",\"id\":\"p1015\"},\"axis_label\":\"Wavelength (nm)\",\"axis_label_text_font_size\":\"16pt\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1016\"},\"major_label_text_font_size\":\"12pt\"}}],\"center\":[{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1017\",\"attributes\":{\"axis\":{\"id\":\"p1013\"}}},{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1022\",\"attributes\":{\"dimension\":1,\"axis\":{\"id\":\"p1018\"}}},{\"type\":\"object\",\"name\":\"Legend\",\"id\":\"p1043\",\"attributes\":{\"title\":\"Volume (\\u00b5L)\",\"title_text_font_size\":\"14pt\",\"click_policy\":\"hide\",\"label_text_font_size\":\"12pt\",\"items\":[{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1044\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"0\"},\"renderers\":[{\"id\":\"p1040\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1054\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"2.6\"},\"renderers\":[{\"id\":\"p1051\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1064\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"5.2\"},\"renderers\":[{\"id\":\"p1061\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1074\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"7.8\"},\"renderers\":[{\"id\":\"p1071\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1084\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"10.4\"},\"renderers\":[{\"id\":\"p1081\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1094\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"13\"},\"renderers\":[{\"id\":\"p1091\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1104\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"15.6\"},\"renderers\":[{\"id\":\"p1101\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1114\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"19.2\"},\"renderers\":[{\"id\":\"p1111\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1124\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"22.8\"},\"renderers\":[{\"id\":\"p1121\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1134\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"26.4\"},\"renderers\":[{\"id\":\"p1131\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1144\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"30\"},\"renderers\":[{\"id\":\"p1141\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1154\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"33.6\"},\"renderers\":[{\"id\":\"p1151\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1164\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"39\"},\"renderers\":[{\"id\":\"p1161\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1174\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"44.4\"},\"renderers\":[{\"id\":\"p1171\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1184\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"49.8\"},\"renderers\":[{\"id\":\"p1181\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1194\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"55.2\"},\"renderers\":[{\"id\":\"p1191\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1204\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"60.6\"},\"renderers\":[{\"id\":\"p1201\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1214\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"70\"},\"renderers\":[{\"id\":\"p1211\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1224\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"80\"},\"renderers\":[{\"id\":\"p1221\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1234\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"90\"},\"renderers\":[{\"id\":\"p1231\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1244\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"100\"},\"renderers\":[{\"id\":\"p1241\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1254\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"110\"},\"renderers\":[{\"id\":\"p1251\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1264\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"120\"},\"renderers\":[{\"id\":\"p1261\"}]}}]}}]}}]}};\n","  const render_items = [{\"docid\":\"e6cea614-3ac6-43bc-95a3-d754eae65f3c\",\"roots\":{\"p1001\":\"a0cce45f-a291-41c1-ba2e-ef0aad20c40e\"},\"root_ids\":[\"p1001\"]}];\n","  void root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n","  }\n","  if (root.Bokeh !== undefined) {\n","    embed_document(root);\n","  } else {\n","    let attempts = 0;\n","    const timer = setInterval(function(root) {\n","      if (root.Bokeh !== undefined) {\n","        clearInterval(timer);\n","        embed_document(root);\n","      } else {\n","        attempts++;\n","        if (attempts > 100) {\n","          clearInterval(timer);\n","          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n","        }\n","      }\n","    }, 10, root)\n","  }\n","})(window);"],"application/vnd.bokehjs_exec.v0+json":""},"metadata":{"application/vnd.bokehjs_exec.v0+json":{"id":"p1001"}}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#@title Spectra plot\n","# @markdown In the spaces below you\n","# @markdown can write the title, the axis and leyend titles\n","\n","\n","### Title of the plot\n","Title = \"Spectra at Different Volumes of ***\"  #@param {type:\"string\"}\n","\n","### Title axis x\n","y_axis = \"Absorbance\" #@param{type:\"string\"}\n","\n","### Title axis y\n","x_axis = \"Wavelength (nm)\" #@param{type:\"string\"}\n","\n","### Title legend\n","Leyend = \"Volume (µL)\" #@param{type:\"string\"}\n","\n","### Option to set the spectra at 0 at a specific wavelength\n","Shift_spectra= True #@param{type:\"boolean\"}\n","target_wavelength=600 #@param{type:\"raw\"}\n","\n","shifted_absorbance = shift_spectra_to_zero(datos, target_wavelength)\n","\n","if Shift_spectra == True:\n","  df = shifted_absorbance\n","else:\n","  df = datos\n","# Check the result\n","#shifted_absorbance[:]  # Displaying the first few rows of the shifted absorbance\n","\n","\n","\n","# Output the plot directly in the notebook\n","output_notebook()\n","\n","# Create a figure\n","p = figure(title=Title,\n","           x_axis_label=x_axis,\n","           y_axis_label=y_axis,\n","           width=1200, height=700) # Here you can modify the resolution (size) of the plot\n","\n","# Define the font size for the title, the axis and labels\n","p.title.text_font_size = '20pt'\n","p.xaxis.axis_label_text_font_size = '16pt'\n","p.yaxis.axis_label_text_font_size = '16pt'\n","p.xaxis.major_label_text_font_size = '12pt'\n","p.yaxis.major_label_text_font_size = '12pt'\n","\n","\n","# Generate a personalized color paletter using Viridis256, with as may colors as columns are in the data\n","n_lines= len(df.columns[1:])\n","colors=linear_palette(Viridis256, n_lines)\n","#colors = Category20[max(3, min(20, n_lines))]  # Category20 supports up to 20 distinct colors\n","\n","\n","# Iterate over the columns (each one represents a different volume)\n","for idx, col in enumerate(df.columns[1:]):\n","    p.line(df.iloc[:, 0], df[col], legend_label=f'{col}', line_width=2, color=colors[idx])\n","\n","# Personalize the leyend Personalizamos la leyenda\n","p.legend.title = Leyend\n","p.legend.location = \"top_right\"\n","p.legend.click_policy = \"hide\"  # Allows to hide the lines by clicking its label in the legend\n","p.toolbar_location = \"below\"\n","# Define the font size for the legend\n","p.legend.label_text_font_size = '12pt'\n","p.legend.title_text_font_size = '14pt'\n","\n","\n","# Save the plot as an object\n","spectra_plot_2D=p\n","\n","# Display the plot\n","show(spectra_plot_2D)\n","\n","\n","# 3D plot\n","\n","\n","# Load experimental data\n","wavelengths = df.iloc[:, 0].values  # Wavelength (nm)\n","\n","# Para evitar problemas asignamos 0 a \"Baseline\" y convertirmos el resto a números enteros\n","# volumes = np.array([0 if col == 'Baseline' else int(col) for col in df.columns[1:]])  # Volumes (µL)\n","\n","# To avoid problems we asign 0 a \"Baseline\" and\n","# For volumes that are floats the line above creates erros\n","volumes = np.array([0 if col == 'Baseline' else float(col) for col in df.columns[1:]])  # Volumes (µL)\n","\n","\n","# Absorbance value for each volume (Baseline included)\n","absorbance = df.iloc[:, 1:].values\n","\n","# Create a figure\n","fig = plt.figure(figsize=(10, 7))\n","ax = fig.add_subplot(111, projection='3d')\n","\n","# Plot each volume spectrum as a 3D line\n","for i, vol in enumerate(volumes):\n","    ax.plot(wavelengths, [vol] * len(wavelengths), absorbance[:, i], label=f'{vol} µL')\n","\n","# Labels and title\n","ax.set_xlabel(x_axis)\n","ax.set_ylabel(Leyend)\n","ax.set_zlabel(y_axis)\n","ax.set_title(Title)\n","\n","# Save the plot as an object\n","spectra_plot_3D=fig\n","\n","# Display the plot\n","spectra_plot_3D.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"cellView":"form","id":"DO5v9zgqZKaF","colab":{"base_uri":"https://localhost:8080/","height":737},"executionInfo":{"status":"ok","timestamp":1731241665825,"user_tz":-60,"elapsed":8,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"e5c2b02e-b929-4d7f-e5f9-bc7fe8dc7f35"},"outputs":[{"output_type":"display_data","data":{"application/javascript":["'use strict';\n","(function(root) {\n","  function now() {\n","    return new Date();\n","  }\n","\n","  const force = true;\n","\n","  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n","    root._bokeh_onload_callbacks = [];\n","    root._bokeh_is_loading = undefined;\n","  }\n","\n","const JS_MIME_TYPE = 'application/javascript';\n","  const HTML_MIME_TYPE = 'text/html';\n","  const EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n","  const CLASS_NAME = 'output_bokeh rendered_html';\n","\n","  /**\n","   * Render data to the DOM node\n","   */\n","  function render(props, node) {\n","    const script = document.createElement(\"script\");\n","    node.appendChild(script);\n","  }\n","\n","  /**\n","   * Handle when an output is cleared or removed\n","   */\n","  function handleClearOutput(event, handle) {\n","    function drop(id) {\n","      const view = Bokeh.index.get_by_id(id)\n","      if (view != null) {\n","        view.model.document.clear()\n","        Bokeh.index.delete(view)\n","      }\n","    }\n","\n","    const cell = handle.cell;\n","\n","    const id = cell.output_area._bokeh_element_id;\n","    const server_id = cell.output_area._bokeh_server_id;\n","\n","    // Clean up Bokeh references\n","    if (id != null) {\n","      drop(id)\n","    }\n","\n","    if (server_id !== undefined) {\n","      // Clean up Bokeh references\n","      const cmd_clean = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n","      cell.notebook.kernel.execute(cmd_clean, {\n","        iopub: {\n","          output: function(msg) {\n","            const id = msg.content.text.trim()\n","            drop(id)\n","          }\n","        }\n","      });\n","      // Destroy server and session\n","      const cmd_destroy = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n","      cell.notebook.kernel.execute(cmd_destroy);\n","    }\n","  }\n","\n","  /**\n","   * Handle when a new output is added\n","   */\n","  function handleAddOutput(event, handle) {\n","    const output_area = handle.output_area;\n","    const output = handle.output;\n","\n","    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n","    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n","      return\n","    }\n","\n","    const toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n","\n","    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n","      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n","      // store reference to embed id on output_area\n","      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n","    }\n","    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n","      const bk_div = document.createElement(\"div\");\n","      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n","      const script_attrs = bk_div.children[0].attributes;\n","      for (let i = 0; i < script_attrs.length; i++) {\n","        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n","        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n","      }\n","      // store reference to server id on output_area\n","      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n","    }\n","  }\n","\n","  function register_renderer(events, OutputArea) {\n","\n","    function append_mime(data, metadata, element) {\n","      // create a DOM node to render to\n","      const toinsert = this.create_output_subarea(\n","        metadata,\n","        CLASS_NAME,\n","        EXEC_MIME_TYPE\n","      );\n","      this.keyboard_manager.register_events(toinsert);\n","      // Render to node\n","      const props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n","      render(props, toinsert[toinsert.length - 1]);\n","      element.append(toinsert);\n","      return toinsert\n","    }\n","\n","    /* Handle when an output is cleared or removed */\n","    events.on('clear_output.CodeCell', handleClearOutput);\n","    events.on('delete.Cell', handleClearOutput);\n","\n","    /* Handle when a new output is added */\n","    events.on('output_added.OutputArea', handleAddOutput);\n","\n","    /**\n","     * Register the mime type and append_mime function with output_area\n","     */\n","    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n","      /* Is output safe? */\n","      safe: true,\n","      /* Index of renderer in `output_area.display_order` */\n","      index: 0\n","    });\n","  }\n","\n","  // register the mime type if in Jupyter Notebook environment and previously unregistered\n","  if (root.Jupyter !== undefined) {\n","    const events = require('base/js/events');\n","    const OutputArea = require('notebook/js/outputarea').OutputArea;\n","\n","    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n","      register_renderer(events, OutputArea);\n","    }\n","  }\n","  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n","    root._bokeh_timeout = Date.now() + 5000;\n","    root._bokeh_failed_load = false;\n","  }\n","\n","  const NB_LOAD_WARNING = {'data': {'text/html':\n","     \"<div style='background-color: #fdd'>\\n\"+\n","     \"<p>\\n\"+\n","     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n","     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n","     \"</p>\\n\"+\n","     \"<ul>\\n\"+\n","     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n","     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n","     \"</ul>\\n\"+\n","     \"<code>\\n\"+\n","     \"from bokeh.resources import INLINE\\n\"+\n","     \"output_notebook(resources=INLINE)\\n\"+\n","     \"</code>\\n\"+\n","     \"</div>\"}};\n","\n","  function display_loaded(error = null) {\n","    const el = document.getElementById(null);\n","    if (el != null) {\n","      const html = (() => {\n","        if (typeof root.Bokeh === \"undefined\") {\n","          if (error == null) {\n","            return \"BokehJS is loading ...\";\n","          } else {\n","            return \"BokehJS failed to load.\";\n","          }\n","        } else {\n","          const prefix = `BokehJS ${root.Bokeh.version}`;\n","          if (error == null) {\n","            return `${prefix} successfully loaded.`;\n","          } else {\n","            return `${prefix} <b>encountered errors</b> while loading and may not function as expected.`;\n","          }\n","        }\n","      })();\n","      el.innerHTML = html;\n","\n","      if (error != null) {\n","        const wrapper = document.createElement(\"div\");\n","        wrapper.style.overflow = \"auto\";\n","        wrapper.style.height = \"5em\";\n","        wrapper.style.resize = \"vertical\";\n","        const content = document.createElement(\"div\");\n","        content.style.fontFamily = \"monospace\";\n","        content.style.whiteSpace = \"pre-wrap\";\n","        content.style.backgroundColor = \"rgb(255, 221, 221)\";\n","        content.textContent = error.stack ?? error.toString();\n","        wrapper.append(content);\n","        el.append(wrapper);\n","      }\n","    } else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(() => display_loaded(error), 100);\n","    }\n","  }\n","\n","  function run_callbacks() {\n","    try {\n","      root._bokeh_onload_callbacks.forEach(function(callback) {\n","        if (callback != null)\n","          callback();\n","      });\n","    } finally {\n","      delete root._bokeh_onload_callbacks\n","    }\n","    console.debug(\"Bokeh: all callbacks have finished\");\n","  }\n","\n","  function load_libs(css_urls, js_urls, callback) {\n","    if (css_urls == null) css_urls = [];\n","    if (js_urls == null) js_urls = [];\n","\n","    root._bokeh_onload_callbacks.push(callback);\n","    if (root._bokeh_is_loading > 0) {\n","      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n","      return null;\n","    }\n","    if (js_urls == null || js_urls.length === 0) {\n","      run_callbacks();\n","      return null;\n","    }\n","    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n","    root._bokeh_is_loading = css_urls.length + js_urls.length;\n","\n","    function on_load() {\n","      root._bokeh_is_loading--;\n","      if (root._bokeh_is_loading === 0) {\n","        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n","        run_callbacks()\n","      }\n","    }\n","\n","    function on_error(url) {\n","      console.error(\"failed to load \" + url);\n","    }\n","\n","    for (let i = 0; i < css_urls.length; i++) {\n","      const url = css_urls[i];\n","      const element = document.createElement(\"link\");\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.rel = \"stylesheet\";\n","      element.type = \"text/css\";\n","      element.href = url;\n","      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n","      document.body.appendChild(element);\n","    }\n","\n","    for (let i = 0; i < js_urls.length; i++) {\n","      const url = js_urls[i];\n","      const element = document.createElement('script');\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.async = false;\n","      element.src = url;\n","      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n","      document.head.appendChild(element);\n","    }\n","  };\n","\n","  function inject_raw_css(css) {\n","    const element = document.createElement(\"style\");\n","    element.appendChild(document.createTextNode(css));\n","    document.body.appendChild(element);\n","  }\n","\n","  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.4.3.min.js\"];\n","  const css_urls = [];\n","\n","  const inline_js = [    function(Bokeh) {\n","      Bokeh.set_log_level(\"info\");\n","    },\n","function(Bokeh) {\n","    }\n","  ];\n","\n","  function run_inline_js() {\n","    if (root.Bokeh !== undefined || force === true) {\n","      try {\n","            for (let i = 0; i < inline_js.length; i++) {\n","      inline_js[i].call(root, root.Bokeh);\n","    }\n","\n","      } catch (error) {throw error;\n","      }} else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(run_inline_js, 100);\n","    } else if (!root._bokeh_failed_load) {\n","      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n","      root._bokeh_failed_load = true;\n","    } else if (force !== true) {\n","      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n","      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n","    }\n","  }\n","\n","  if (root._bokeh_is_loading === 0) {\n","    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n","    run_inline_js();\n","  } else {\n","    load_libs(css_urls, js_urls, function() {\n","      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n","      run_inline_js();\n","    });\n","  }\n","}(window));"],"application/vnd.bokehjs_load.v0+json":"'use strict';\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  const NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded(error = null) {\n    const el = document.getElementById(null);\n    if (el != null) {\n      const html = (() => {\n        if (typeof root.Bokeh === \"undefined\") {\n          if (error == null) {\n            return \"BokehJS is loading ...\";\n          } else {\n            return \"BokehJS failed to load.\";\n          }\n        } else {\n          const prefix = `BokehJS ${root.Bokeh.version}`;\n          if (error == null) {\n            return `${prefix} successfully loaded.`;\n          } else {\n            return `${prefix} <b>encountered errors</b> while loading and may not function as expected.`;\n          }\n        }\n      })();\n      el.innerHTML = html;\n\n      if (error != null) {\n        const wrapper = document.createElement(\"div\");\n        wrapper.style.overflow = \"auto\";\n        wrapper.style.height = \"5em\";\n        wrapper.style.resize = \"vertical\";\n        const content = document.createElement(\"div\");\n        content.style.fontFamily = \"monospace\";\n        content.style.whiteSpace = \"pre-wrap\";\n        content.style.backgroundColor = \"rgb(255, 221, 221)\";\n        content.textContent = error.stack ?? error.toString();\n        wrapper.append(content);\n        el.append(wrapper);\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(() => display_loaded(error), 100);\n    }\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.4.3.min.js\"];\n  const css_urls = [];\n\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {\n    }\n  ];\n\n  function run_inline_js() {\n    if (root.Bokeh !== undefined || force === true) {\n      try {\n            for (let i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n\n      } catch (error) {throw error;\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"},"metadata":{}},{"output_type":"display_data","data":{"text/html":["\n","  <div id=\"dcf09d49-92a0-4a76-a8db-406f0b48833c\" data-root-id=\"p1191\" style=\"display: contents;\"></div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["(function(root) {\n","  function embed_document(root) {\n","  const docs_json = {\"fe87236e-ac17-4cb8-b9a6-f4a0d33f3570\":{\"version\":\"3.4.3\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"Figure\",\"id\":\"p1191\",\"attributes\":{\"width\":1200,\"height\":700,\"x_range\":{\"type\":\"object\",\"name\":\"DataRange1d\",\"id\":\"p1192\"},\"y_range\":{\"type\":\"object\",\"name\":\"DataRange1d\",\"id\":\"p1193\"},\"x_scale\":{\"type\":\"object\",\"name\":\"LinearScale\",\"id\":\"p1201\"},\"y_scale\":{\"type\":\"object\",\"name\":\"LinearScale\",\"id\":\"p1202\"},\"title\":{\"type\":\"object\",\"name\":\"Title\",\"id\":\"p1194\",\"attributes\":{\"text\":\"\\u0394 Absorbance vs added Volume ***\",\"text_font_size\":\"20pt\"}},\"renderers\":[{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1230\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1224\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1225\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1226\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"AgAAAAQAAAAGAAAACAAAAAoAAAAMAAAAEAAAABQAAAAYAAAAIAAAACgAAAAwAAAA\"},\"shape\":[12],\"dtype\":\"int32\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"1xLyQc9mpT+1pnnHKTqyP14pyxDHurg/GuJYF7fRwD+ezarP1VbEP9iBc0aU9sY/bVZ9rrZixz+xcmiR7XzHP+LHmLuWkMc/sHJoke18xz+0yHa+nxrHP08eFmpN88Y/\"},\"shape\":[12],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1231\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1232\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Scatter\",\"id\":\"p1227\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"size\":{\"type\":\"value\",\"value\":10},\"line_color\":{\"type\":\"value\",\"value\":\"blue\"},\"fill_color\":{\"type\":\"value\",\"value\":\"blue\"},\"hatch_color\":{\"type\":\"value\",\"value\":\"blue\"}}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Scatter\",\"id\":\"p1228\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"size\":{\"type\":\"value\",\"value\":10},\"line_color\":{\"type\":\"value\",\"value\":\"blue\"},\"line_alpha\":{\"type\":\"value\",\"value\":0.1},\"fill_color\":{\"type\":\"value\",\"value\":\"blue\"},\"fill_alpha\":{\"type\":\"value\",\"value\":0.1},\"hatch_color\":{\"type\":\"value\",\"value\":\"blue\"},\"hatch_alpha\":{\"type\":\"value\",\"value\":0.1}}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Scatter\",\"id\":\"p1229\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"size\":{\"type\":\"value\",\"value\":10},\"line_color\":{\"type\":\"value\",\"value\":\"blue\"},\"line_alpha\":{\"type\":\"value\",\"value\":0.2},\"fill_color\":{\"type\":\"value\",\"value\":\"blue\"},\"fill_alpha\":{\"type\":\"value\",\"value\":0.2},\"hatch_color\":{\"type\":\"value\",\"value\":\"blue\"},\"hatch_alpha\":{\"type\":\"value\",\"value\":0.2}}}}}],\"toolbar\":{\"type\":\"object\",\"name\":\"Toolbar\",\"id\":\"p1200\",\"attributes\":{\"tools\":[{\"type\":\"object\",\"name\":\"PanTool\",\"id\":\"p1213\"},{\"type\":\"object\",\"name\":\"WheelZoomTool\",\"id\":\"p1214\",\"attributes\":{\"renderers\":\"auto\"}},{\"type\":\"object\",\"name\":\"BoxZoomTool\",\"id\":\"p1215\",\"attributes\":{\"overlay\":{\"type\":\"object\",\"name\":\"BoxAnnotation\",\"id\":\"p1216\",\"attributes\":{\"syncable\":false,\"level\":\"overlay\",\"visible\":false,\"left\":{\"type\":\"number\",\"value\":\"nan\"},\"right\":{\"type\":\"number\",\"value\":\"nan\"},\"top\":{\"type\":\"number\",\"value\":\"nan\"},\"bottom\":{\"type\":\"number\",\"value\":\"nan\"},\"left_units\":\"canvas\",\"right_units\":\"canvas\",\"top_units\":\"canvas\",\"bottom_units\":\"canvas\",\"line_color\":\"black\",\"line_alpha\":1.0,\"line_width\":2,\"line_dash\":[4,4],\"fill_color\":\"lightgrey\",\"fill_alpha\":0.5}}}},{\"type\":\"object\",\"name\":\"SaveTool\",\"id\":\"p1221\"},{\"type\":\"object\",\"name\":\"ResetTool\",\"id\":\"p1222\"},{\"type\":\"object\",\"name\":\"HelpTool\",\"id\":\"p1223\"}]}},\"toolbar_location\":\"below\",\"left\":[{\"type\":\"object\",\"name\":\"LinearAxis\",\"id\":\"p1208\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"BasicTicker\",\"id\":\"p1209\",\"attributes\":{\"mantissas\":[1,2,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"BasicTickFormatter\",\"id\":\"p1210\"},\"axis_label\":\"\\u0394 Absorbance\",\"axis_label_text_font_size\":\"16pt\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1211\"},\"major_label_text_font_size\":\"12pt\"}}],\"below\":[{\"type\":\"object\",\"name\":\"LinearAxis\",\"id\":\"p1203\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"BasicTicker\",\"id\":\"p1204\",\"attributes\":{\"mantissas\":[1,2,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"BasicTickFormatter\",\"id\":\"p1205\"},\"axis_label\":\"Volume (\\u00b5L)\",\"axis_label_text_font_size\":\"16pt\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1206\"},\"major_label_text_font_size\":\"12pt\"}}],\"center\":[{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1207\",\"attributes\":{\"axis\":{\"id\":\"p1203\"}}},{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1212\",\"attributes\":{\"dimension\":1,\"axis\":{\"id\":\"p1208\"}}},{\"type\":\"object\",\"name\":\"Legend\",\"id\":\"p1233\",\"attributes\":{\"location\":\"bottom_right\",\"title\":\"Legend\",\"title_text_font_size\":\"14pt\",\"label_text_font_size\":\"12pt\",\"items\":[{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1234\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"\\u0394 Absorbance\"},\"renderers\":[{\"id\":\"p1230\"}]}}]}}]}}]}};\n","  const render_items = [{\"docid\":\"fe87236e-ac17-4cb8-b9a6-f4a0d33f3570\",\"roots\":{\"p1191\":\"dcf09d49-92a0-4a76-a8db-406f0b48833c\"},\"root_ids\":[\"p1191\"]}];\n","  void root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n","  }\n","  if (root.Bokeh !== undefined) {\n","    embed_document(root);\n","  } else {\n","    let attempts = 0;\n","    const timer = setInterval(function(root) {\n","      if (root.Bokeh !== undefined) {\n","        clearInterval(timer);\n","        embed_document(root);\n","      } else {\n","        attempts++;\n","        if (attempts > 100) {\n","          clearInterval(timer);\n","          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n","        }\n","      }\n","    }, 10, root)\n","  }\n","})(window);"],"application/vnd.bokehjs_exec.v0+json":""},"metadata":{"application/vnd.bokehjs_exec.v0+json":{"id":"p1191"}}}],"source":["#@title Plot Δ Absorbance vs Volume (µL)\n","\n","\n","### Plot tittle\n","Title = \"Δ Absorbance vs added Volume ***\"  #@param {type:\"string\"}\n","\n","### Title axis x\n","y_axis = \"Δ Absorbance\" #@param{type:\"string\"}\n","\n","### Title axis y\n","x_axis = \"Volume (µL)\" #@param{type:\"string\"}\n","\n","### Title leyend\n","Leyend = \"Δ Absorbance\" #@param{type:\"string\"}\n","\n","\n","# Display Bokeh plots in the notebook\n","output_notebook()\n","\n","# Create a figure\n","p = figure(width=1200, height=700, title=Title)\n","\n","# Add a scatter-plot\n","scatter = p.scatter(x=DeltaAbs.iloc[:, 0],y=DeltaAbs.iloc[:, 1] ,  legend_label=Leyend, color='blue', size=10)\n","\n","# Personalize the axis' titles\n","p.xaxis.axis_label = x_axis\n","p.yaxis.axis_label = y_axis\n","\n","\n","# Define the font size for the title, the axis and the labels\n","p.title.text_font_size = '20pt'\n","p.xaxis.axis_label_text_font_size = '16pt'\n","p.yaxis.axis_label_text_font_size = '16pt'\n","p.xaxis.major_label_text_font_size = '12pt'\n","p.yaxis.major_label_text_font_size = '12pt'\n","\n","# Add the leyend\n","p.legend.title = 'Legend'\n","\n","# Define the font size for the leyend\n","p.legend.label_text_font_size = '12pt'\n","p.legend.title_text_font_size = '14pt'\n","p.legend.location = \"bottom_right\"\n","p.toolbar_location = \"below\"\n","\n","\n","# Save the plot as an object\n","D_Absorbance_plot=p\n","\n","# Display the plot\n","show(D_Absorbance_plot)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WKo01AwWnlMO","cellView":"form"},"outputs":[],"source":["#@title Model\n","# Define the fitting function based on the mathematical model\n","def binding_model (params, v):\n","\n","    # Extract the parameters from params\n","    L = params['L']\n","    V0 = params['V0']\n","    Lo = params['Lo']\n","    Ro = params['Ro']\n","    Kd = params['Kd']\n","    epsilon = params['epsilon']\n","\n","    Lt = Lo * v / (V0 + v)\n","    Rt = Ro * V0 / (V0 + v)\n","    deltaAbs = epsilon * L * (Lt + Rt + Kd - np.sqrt((Lt + Rt + Kd)**2 - 4 * Lt * Rt)) / 2\n","    return deltaAbs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N9RzxRO2VlNq","cellView":"form","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731241665825,"user_tz":-60,"elapsed":7,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"d103b400-c753-4854-affe-bc4c79246d4e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Fixed Parameters:\n","L = 1\n","V0 = 1000\n","Lo = 55\n","\n","Variable Parameters:\n","Ro = 2\n","Kd = 100\n","epsilon = 0.1\n"]}],"source":["# @title Parameters\n","# @markdown **Fixed and to be Optimzed Parameters**:\n","# @markdown Select the fixed parameters and those to be optimized and input the initial estimation:\n","\n","import numpy as np\n","# @markdown\n","\n","# @markdown **- L [cm] (light path length)**\n","# Use the dropdown to chose whether the parameters are fixed or not\n","L_fixed = \"Yes\"  # @param [\"Yes\", \"No\"]\n","L = 1  # @param {type:\"number\"}\n","\n","# @markdown\n","\n","# @markdown **- V0 [µL] (initial solution volume)**\n","V0_fixed = \"Yes\"  # @param [\"Yes\", \"No\"]\n","V0 = 1000  # @param {type:\"number\"}\n","\n","# @markdown\n","\n","# @markdown **- L0 [µM] (initial solution concentration of Ligand)**\n","Lo_fixed = \"Yes\"  # @param [\"Yes\", \"No\"]\n","Lo = 55  # @param {type:\"number\"}\n","\n","# @markdown\n","\n","# @markdown **- R0 [µM] (initial solution concentration of Receptor)**\n","Ro_fixed = \"No\"  # @param [\"Yes\", \"No\"]\n","Ro = 2  # @param {type:\"number\"}\n","\n","# @markdown\n","\n","# @markdown **- Kd**\n","Kd_fixed = \"No\"  # @param [\"Yes\", \"No\"]\n","Kd = 100  # @param {type:\"number\"}\n","\n","# @markdown\n","\n","# @markdown **- epsilon**\n","epsilon_fixed = \"No\"  # @param [\"Yes\", \"No\"]\n","epsilon = 0.1  # @param {type:\"number\"}\n","\n","# Initialize list for the fixed and variable parameters (these last ones are to be optimized later)\n","fixed_params = {}\n","variable_params = {}\n","\n","if L_fixed == \"Yes\":\n","    fixed_params['L'] = L\n","else:\n","    variable_params['L'] = L\n","\n","if V0_fixed == \"Yes\":\n","    fixed_params['V0'] = V0\n","else:\n","    variable_params['V0'] = V0\n","\n","if Lo_fixed == \"Yes\":\n","    fixed_params['Lo'] = Lo\n","else:\n","    variable_params['Lo'] = Lo\n","\n","if Ro_fixed == \"Yes\":\n","    fixed_params['Ro'] = Ro\n","else:\n","    variable_params['Ro'] = Ro\n","\n","if Kd_fixed == \"Yes\":\n","    fixed_params['Kd'] = Kd\n","else:\n","    variable_params['Kd'] = Kd\n","\n","if epsilon_fixed == \"Yes\":\n","    fixed_params['epsilon'] = epsilon\n","else:\n","    variable_params['epsilon'] = epsilon\n","\n","# Output of the fixed and variable parameters\n","print(\"Fixed Parameters:\")\n","for key, value in fixed_params.items():\n","    print(f\"{key} = {value}\")\n","\n","print(\"\\nVariable Parameters:\")\n","for key, value in variable_params.items():\n","    print(f\"{key} = {value}\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I-7i0Kj8KLU0","cellView":"form","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731241666090,"user_tz":-60,"elapsed":270,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"10249dca-0236-44ef-de62-a4046aa785bd"},"outputs":[{"output_type":"stream","name":"stdout","text":["\t||residuals|| = 0.5315599012091805\n","\t||residuals|| = 0.5315599013133722\n","\t||residuals|| = 0.5315599013117779\n","\t||residuals|| = 0.5315599001476384\n","\t||residuals|| = 0.23918760837078756\n","\t||residuals|| = 0.23918760833195535\n","\t||residuals|| = 0.239187608372326\n","\t||residuals|| = 0.23918760840735168\n","\t||residuals|| = 6.71971883886655\n","\t||residuals|| = 0.23846761203189284\n","\t||residuals|| = 0.23846761228159374\n","\t||residuals|| = 0.23846761184116727\n","\t||residuals|| = 0.23846761228285118\n","\t||residuals|| = 0.23808034041004367\n","\t||residuals|| = 0.2380803404271491\n","\t||residuals|| = 0.23808034044919207\n","\t||residuals|| = 0.23808034042341875\n","\t||residuals|| = 5.175472616543452\n","\t||residuals|| = 0.23686322037032276\n","\t||residuals|| = 0.2368632204549108\n","\t||residuals|| = 0.23686322036250007\n","\t||residuals|| = 0.23686322045168168\n","\t||residuals|| = 0.23641958210667097\n","\t||residuals|| = 0.23641958211428465\n","\t||residuals|| = 0.23641958217895376\n","\t||residuals|| = 0.23641958210912117\n","\t||residuals|| = 2.9652994914087687\n","\t||residuals|| = 0.2348703562451343\n","\t||residuals|| = 0.23487035588450667\n","\t||residuals|| = 0.2348703566296724\n","\t||residuals|| = 0.23487035593679845\n","\t||residuals|| = 0.23252994639006108\n","\t||residuals|| = 0.2325299466047651\n","\t||residuals|| = 0.23252994636570165\n","\t||residuals|| = 0.23252994655656004\n","\t||residuals|| = 0.2311625380990874\n","\t||residuals|| = 0.23116253815130583\n","\t||residuals|| = 0.23116253821723\n","\t||residuals|| = 0.23116253812729373\n","\t||residuals|| = 1.9893847042858526\n","\t||residuals|| = 0.22777974052761568\n","\t||residuals|| = 0.2277797405424735\n","\t||residuals|| = 0.22777974071837273\n","\t||residuals|| = 0.22777974052277072\n","\t||residuals|| = 0.21331543901424116\n","\t||residuals|| = 0.2133154348385344\n","\t||residuals|| = 0.21331544021585627\n","\t||residuals|| = 0.2133154379554672\n","\t||residuals|| = 0.2006966004270907\n","\t||residuals|| = 0.20069660189924224\n","\t||residuals|| = 0.2006966007174053\n","\t||residuals|| = 0.20069660070634127\n","\t||residuals|| = 0.5782495580202582\n","\t||residuals|| = 0.1891310313292339\n","\t||residuals|| = 0.18913103117855792\n","\t||residuals|| = 0.18913103197160752\n","\t||residuals|| = 0.18913103126207356\n","\t||residuals|| = 0.14085468259402173\n","\t||residuals|| = 0.14085467066959026\n","\t||residuals|| = 0.14085468407018636\n","\t||residuals|| = 0.1408546814231962\n","\t||residuals|| = 0.287201457010164\n","\t||residuals|| = 0.09813094841874391\n","\t||residuals|| = 0.09813094318370097\n","\t||residuals|| = 0.09813094976960178\n","\t||residuals|| = 0.09813094797842624\n","\t||residuals|| = 0.09219082244241164\n","\t||residuals|| = 0.09219068366201724\n","\t||residuals|| = 0.09219082677245431\n","\t||residuals|| = 0.09219081705265293\n","\t||residuals|| = 0.05444615012836617\n","\t||residuals|| = 0.05444613967720946\n","\t||residuals|| = 0.054446151255805646\n","\t||residuals|| = 0.05444614974031626\n","\t||residuals|| = 0.05385469692209061\n","\t||residuals|| = 0.05385464974773249\n","\t||residuals|| = 0.05385469847491471\n","\t||residuals|| = 0.05385469497877545\n","\t||residuals|| = 0.05916418219549313\n","\t||residuals|| = 0.0520817780568864\n","\t||residuals|| = 0.05208176991303945\n","\t||residuals|| = 0.052081778358905345\n","\t||residuals|| = 0.05208177771303757\n","\t||residuals|| = 0.05236813108691353\n","\t||residuals|| = 0.051980695605646395\n","\t||residuals|| = 0.051980693861350354\n","\t||residuals|| = 0.05198069567107972\n","\t||residuals|| = 0.05198069554874138\n","\t||residuals|| = 0.05191056101887382\n","\t||residuals|| = 0.0519105548372172\n","\t||residuals|| = 0.05191056126572155\n","\t||residuals|| = 0.05191056073910135\n","\t||residuals|| = 0.05180449683072235\n","\t||residuals|| = 0.051804490019205104\n","\t||residuals|| = 0.05180449712308457\n","\t||residuals|| = 0.05180449649868788\n","\t||residuals|| = 0.05168202426103124\n","\t||residuals|| = 0.051682016970703036\n","\t||residuals|| = 0.05168202459828782\n","\t||residuals|| = 0.05168202387766591\n","\t||residuals|| = 0.051543380795503156\n","\t||residuals|| = 0.05154337296639635\n","\t||residuals|| = 0.05154338118832399\n","\t||residuals|| = 0.05154338034905384\n","\t||residuals|| = 0.05138632609706074\n","\t||residuals|| = 0.05138631764630944\n","\t||residuals|| = 0.05138632656023309\n","\t||residuals|| = 0.0513863255712511\n","\t||residuals|| = 0.05120882455974808\n","\t||residuals|| = 0.05120881538354441\n","\t||residuals|| = 0.05120882511383868\n","\t||residuals|| = 0.051208823932226546\n","\t||residuals|| = 0.05101024165533645\n","\t||residuals|| = 0.051010231623366736\n","\t||residuals|| = 0.05101024232964623\n","\t||residuals|| = 0.051010240894736054\n","\t||residuals|| = 0.05079425528680696\n","\t||residuals|| = 0.05079424423397477\n","\t||residuals|| = 0.05079425612441107\n","\t||residuals|| = 0.05079425434788348\n","\t||residuals|| = 0.05057640987382324\n","\t||residuals|| = 0.05057639759056701\n","\t||residuals|| = 0.05057641094032321\n","\t||residuals|| = 0.05057640868932377\n","\t||residuals|| = 0.05040462120832418\n","\t||residuals|| = 0.05040460743352374\n","\t||residuals|| = 0.050404622607547245\n","\t||residuals|| = 0.05040461967516442\n","\t||residuals|| = 0.04917944284927782\n","\t||residuals|| = 0.04917944131766826\n","\t||residuals|| = 0.0491794430412571\n","\t||residuals|| = 0.04917944273035002\n","\t||residuals|| = 0.048868362916487156\n","\t||residuals|| = 0.04886835874738636\n","\t||residuals|| = 0.04886836340922942\n","\t||residuals|| = 0.04886836244155662\n","\t||residuals|| = 0.050299321625950064\n","\t||residuals|| = 0.048526793965200564\n","\t||residuals|| = 0.04852679260919511\n","\t||residuals|| = 0.048526794149969514\n","\t||residuals|| = 0.04852679385761188\n","\t||residuals|| = 0.048159027574161344\n","\t||residuals|| = 0.048159022841243335\n","\t||residuals|| = 0.04815902823281878\n","\t||residuals|| = 0.048159026945921384\n","\t||residuals|| = 0.0476010313400487\n","\t||residuals|| = 0.04760102587401621\n","\t||residuals|| = 0.04760103221385183\n","\t||residuals|| = 0.04760103052088127\n","\t||residuals|| = 0.046902109986237686\n","\t||residuals|| = 0.04690210395174841\n","\t||residuals|| = 0.046902111100897925\n","\t||residuals|| = 0.046902108962537194\n","\t||residuals|| = 0.04605615371636584\n","\t||residuals|| = 0.046056147020086334\n","\t||residuals|| = 0.04605615517528896\n","\t||residuals|| = 0.046056152413295394\n","\t||residuals|| = 0.045034175677079215\n","\t||residuals|| = 0.04503416823235728\n","\t||residuals|| = 0.04503417764461544\n","\t||residuals|| = 0.04503417386772013\n","\t||residuals|| = 0.043798858998249424\n","\t||residuals|| = 0.04379885079228497\n","\t||residuals|| = 0.04379886172691057\n","\t||residuals|| = 0.04379885620213082\n","\t||residuals|| = 0.04221667593561666\n","\t||residuals|| = 0.04221666717689226\n","\t||residuals|| = 0.04221667977789178\n","\t||residuals|| = 0.0422166715715106\n","\t||residuals|| = 0.038817591480519914\n","\t||residuals|| = 0.03881758359956675\n","\t||residuals|| = 0.03881759634342345\n","\t||residuals|| = 0.0388175857447372\n","\t||residuals|| = 0.03257729095160657\n","\t||residuals|| = 0.03257728682643363\n","\t||residuals|| = 0.03257729504661708\n","\t||residuals|| = 0.03257728717013953\n","\t||residuals|| = 0.028034786088300418\n","\t||residuals|| = 0.028034780212159636\n","\t||residuals|| = 0.028034793328833258\n","\t||residuals|| = 0.028034778309890748\n","\t||residuals|| = 0.02170256236401012\n","\t||residuals|| = 0.021702560976420617\n","\t||residuals|| = 0.02170256713802053\n","\t||residuals|| = 0.02170256048812908\n","\t||residuals|| = 0.015642982405541087\n","\t||residuals|| = 0.015642979647464226\n","\t||residuals|| = 0.015642990638338874\n","\t||residuals|| = 0.015642977414665724\n","\t||residuals|| = 0.012394853800175036\n","\t||residuals|| = 0.012394853321804686\n","\t||residuals|| = 0.012394859478121896\n","\t||residuals|| = 0.012394853092429318\n","\t||residuals|| = 0.010676281552876808\n","\t||residuals|| = 0.01067628134281589\n","\t||residuals|| = 0.010676284948224623\n","\t||residuals|| = 0.010676281426502952\n","\t||residuals|| = 0.010279411820950443\n","\t||residuals|| = 0.010279411757899178\n","\t||residuals|| = 0.010279413016774392\n","\t||residuals|| = 0.010279411852080861\n","\t||residuals|| = 0.010235750869516247\n","\t||residuals|| = 0.010235750848511294\n","\t||residuals|| = 0.010235751129705671\n","\t||residuals|| = 0.010235750878136088\n","\t||residuals|| = 0.01023348180765927\n","\t||residuals|| = 0.010233481802503509\n","\t||residuals|| = 0.010233481853923067\n","\t||residuals|| = 0.010233481808055493\n","\t||residuals|| = 0.01023340505067027\n","\t||residuals|| = 0.010233405049730504\n","\t||residuals|| = 0.010233405058735965\n","\t||residuals|| = 0.010233405050710217\n","\t||residuals|| = 0.01023340272543506\n","\t||residuals|| = 0.010233402725277166\n","\t||residuals|| = 0.01023340272687238\n","\t||residuals|| = 0.010233402725468011\n","\t||residuals|| = 0.010233402656382022\n","\t||residuals|| = 0.010233402656359978\n","\t||residuals|| = 0.010233402656678822\n","\t||residuals|| = 0.010233402656414795\n","\t||residuals|| = 0.010233402654330455\n","\t||residuals|| = 0.010233402654331786\n","\t||residuals|| = 0.010233402654431258\n","\t||residuals|| = 0.010233402654363219\n","\t||residuals|| = 0.010233402654268253\n","\t||residuals|| = 0.01023340265427377\n","\t||residuals|| = 0.010233402654335397\n","\t||residuals|| = 0.010233402654301038\n","\t||residuals|| = 0.010233402654266432\n","\t||residuals|| = 0.01023340265427248\n","\t||residuals|| = 0.010233402654327633\n","\t||residuals|| = 0.010233402654299192\n","\t||residuals|| = 0.010233402654266236\n","\t||residuals|| = 0.010233402654272514\n","\t||residuals|| = 0.010233402654326556\n","\t||residuals|| = 0.010233402654299008\n","`ftol` termination condition is satisfied.\n","Function evaluations 66, initial cost 1.4128e-01, final cost 5.2361e-05, first-order optimality 6.88e-12.\n","\n"," parAjustados: {'Ro': 0.6103436632231651, 'Kd': 0.004338108627067491, 'epsilon': 0.30990596385219626, 'L': 1, 'V0': 1000, 'Lo': 55} \n"," sd= [0.01355781 0.00254942 0.00750242] \n","\n"]}],"source":["#@title Procesa\n","# Prepare the list of the parameters names to be opimized\n","nombrParVar = list(variable_params.keys())\n","\n","# Independent values (v) and dependent values (Absorbance)\n","fKwargs = dict(v = DeltaAbs.iloc[:, 0].values) # Data of ligand solution volume added\n","deltaAbs_exp = DeltaAbs.iloc[:, 1].values # Absorbance data\n","\n","initial_params= {**fixed_params, **variable_params}\n","cotaInf = [0 for param in nombrParVar]\n","cotaSup= [2 if param =='Ro' else np.inf for param in nombrParVar]\n","\n","sol=procesa(argLeastSquares = argLeastSquares,\n","                     dictParEstim = initial_params,\n","                     nombrParVar = nombrParVar,\n","                     f = binding_model,\n","                     fKwargs = fKwargs,\n","                     Y = deltaAbs_exp,\n","                     bounds =[cotaInf, cotaSup])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"cellView":"form","id":"k4RmiJcLS1tI","colab":{"base_uri":"https://localhost:8080/","height":737},"executionInfo":{"status":"ok","timestamp":1731241666090,"user_tz":-60,"elapsed":4,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"b3b72090-2e5f-40bd-8663-eca5d1d6262b"},"outputs":[{"output_type":"display_data","data":{"application/javascript":["'use strict';\n","(function(root) {\n","  function now() {\n","    return new Date();\n","  }\n","\n","  const force = true;\n","\n","  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n","    root._bokeh_onload_callbacks = [];\n","    root._bokeh_is_loading = undefined;\n","  }\n","\n","const JS_MIME_TYPE = 'application/javascript';\n","  const HTML_MIME_TYPE = 'text/html';\n","  const EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n","  const CLASS_NAME = 'output_bokeh rendered_html';\n","\n","  /**\n","   * Render data to the DOM node\n","   */\n","  function render(props, node) {\n","    const script = document.createElement(\"script\");\n","    node.appendChild(script);\n","  }\n","\n","  /**\n","   * Handle when an output is cleared or removed\n","   */\n","  function handleClearOutput(event, handle) {\n","    function drop(id) {\n","      const view = Bokeh.index.get_by_id(id)\n","      if (view != null) {\n","        view.model.document.clear()\n","        Bokeh.index.delete(view)\n","      }\n","    }\n","\n","    const cell = handle.cell;\n","\n","    const id = cell.output_area._bokeh_element_id;\n","    const server_id = cell.output_area._bokeh_server_id;\n","\n","    // Clean up Bokeh references\n","    if (id != null) {\n","      drop(id)\n","    }\n","\n","    if (server_id !== undefined) {\n","      // Clean up Bokeh references\n","      const cmd_clean = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n","      cell.notebook.kernel.execute(cmd_clean, {\n","        iopub: {\n","          output: function(msg) {\n","            const id = msg.content.text.trim()\n","            drop(id)\n","          }\n","        }\n","      });\n","      // Destroy server and session\n","      const cmd_destroy = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n","      cell.notebook.kernel.execute(cmd_destroy);\n","    }\n","  }\n","\n","  /**\n","   * Handle when a new output is added\n","   */\n","  function handleAddOutput(event, handle) {\n","    const output_area = handle.output_area;\n","    const output = handle.output;\n","\n","    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n","    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n","      return\n","    }\n","\n","    const toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n","\n","    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n","      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n","      // store reference to embed id on output_area\n","      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n","    }\n","    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n","      const bk_div = document.createElement(\"div\");\n","      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n","      const script_attrs = bk_div.children[0].attributes;\n","      for (let i = 0; i < script_attrs.length; i++) {\n","        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n","        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n","      }\n","      // store reference to server id on output_area\n","      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n","    }\n","  }\n","\n","  function register_renderer(events, OutputArea) {\n","\n","    function append_mime(data, metadata, element) {\n","      // create a DOM node to render to\n","      const toinsert = this.create_output_subarea(\n","        metadata,\n","        CLASS_NAME,\n","        EXEC_MIME_TYPE\n","      );\n","      this.keyboard_manager.register_events(toinsert);\n","      // Render to node\n","      const props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n","      render(props, toinsert[toinsert.length - 1]);\n","      element.append(toinsert);\n","      return toinsert\n","    }\n","\n","    /* Handle when an output is cleared or removed */\n","    events.on('clear_output.CodeCell', handleClearOutput);\n","    events.on('delete.Cell', handleClearOutput);\n","\n","    /* Handle when a new output is added */\n","    events.on('output_added.OutputArea', handleAddOutput);\n","\n","    /**\n","     * Register the mime type and append_mime function with output_area\n","     */\n","    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n","      /* Is output safe? */\n","      safe: true,\n","      /* Index of renderer in `output_area.display_order` */\n","      index: 0\n","    });\n","  }\n","\n","  // register the mime type if in Jupyter Notebook environment and previously unregistered\n","  if (root.Jupyter !== undefined) {\n","    const events = require('base/js/events');\n","    const OutputArea = require('notebook/js/outputarea').OutputArea;\n","\n","    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n","      register_renderer(events, OutputArea);\n","    }\n","  }\n","  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n","    root._bokeh_timeout = Date.now() + 5000;\n","    root._bokeh_failed_load = false;\n","  }\n","\n","  const NB_LOAD_WARNING = {'data': {'text/html':\n","     \"<div style='background-color: #fdd'>\\n\"+\n","     \"<p>\\n\"+\n","     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n","     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n","     \"</p>\\n\"+\n","     \"<ul>\\n\"+\n","     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n","     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n","     \"</ul>\\n\"+\n","     \"<code>\\n\"+\n","     \"from bokeh.resources import INLINE\\n\"+\n","     \"output_notebook(resources=INLINE)\\n\"+\n","     \"</code>\\n\"+\n","     \"</div>\"}};\n","\n","  function display_loaded(error = null) {\n","    const el = document.getElementById(null);\n","    if (el != null) {\n","      const html = (() => {\n","        if (typeof root.Bokeh === \"undefined\") {\n","          if (error == null) {\n","            return \"BokehJS is loading ...\";\n","          } else {\n","            return \"BokehJS failed to load.\";\n","          }\n","        } else {\n","          const prefix = `BokehJS ${root.Bokeh.version}`;\n","          if (error == null) {\n","            return `${prefix} successfully loaded.`;\n","          } else {\n","            return `${prefix} <b>encountered errors</b> while loading and may not function as expected.`;\n","          }\n","        }\n","      })();\n","      el.innerHTML = html;\n","\n","      if (error != null) {\n","        const wrapper = document.createElement(\"div\");\n","        wrapper.style.overflow = \"auto\";\n","        wrapper.style.height = \"5em\";\n","        wrapper.style.resize = \"vertical\";\n","        const content = document.createElement(\"div\");\n","        content.style.fontFamily = \"monospace\";\n","        content.style.whiteSpace = \"pre-wrap\";\n","        content.style.backgroundColor = \"rgb(255, 221, 221)\";\n","        content.textContent = error.stack ?? error.toString();\n","        wrapper.append(content);\n","        el.append(wrapper);\n","      }\n","    } else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(() => display_loaded(error), 100);\n","    }\n","  }\n","\n","  function run_callbacks() {\n","    try {\n","      root._bokeh_onload_callbacks.forEach(function(callback) {\n","        if (callback != null)\n","          callback();\n","      });\n","    } finally {\n","      delete root._bokeh_onload_callbacks\n","    }\n","    console.debug(\"Bokeh: all callbacks have finished\");\n","  }\n","\n","  function load_libs(css_urls, js_urls, callback) {\n","    if (css_urls == null) css_urls = [];\n","    if (js_urls == null) js_urls = [];\n","\n","    root._bokeh_onload_callbacks.push(callback);\n","    if (root._bokeh_is_loading > 0) {\n","      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n","      return null;\n","    }\n","    if (js_urls == null || js_urls.length === 0) {\n","      run_callbacks();\n","      return null;\n","    }\n","    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n","    root._bokeh_is_loading = css_urls.length + js_urls.length;\n","\n","    function on_load() {\n","      root._bokeh_is_loading--;\n","      if (root._bokeh_is_loading === 0) {\n","        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n","        run_callbacks()\n","      }\n","    }\n","\n","    function on_error(url) {\n","      console.error(\"failed to load \" + url);\n","    }\n","\n","    for (let i = 0; i < css_urls.length; i++) {\n","      const url = css_urls[i];\n","      const element = document.createElement(\"link\");\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.rel = \"stylesheet\";\n","      element.type = \"text/css\";\n","      element.href = url;\n","      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n","      document.body.appendChild(element);\n","    }\n","\n","    for (let i = 0; i < js_urls.length; i++) {\n","      const url = js_urls[i];\n","      const element = document.createElement('script');\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.async = false;\n","      element.src = url;\n","      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n","      document.head.appendChild(element);\n","    }\n","  };\n","\n","  function inject_raw_css(css) {\n","    const element = document.createElement(\"style\");\n","    element.appendChild(document.createTextNode(css));\n","    document.body.appendChild(element);\n","  }\n","\n","  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.4.3.min.js\"];\n","  const css_urls = [];\n","\n","  const inline_js = [    function(Bokeh) {\n","      Bokeh.set_log_level(\"info\");\n","    },\n","function(Bokeh) {\n","    }\n","  ];\n","\n","  function run_inline_js() {\n","    if (root.Bokeh !== undefined || force === true) {\n","      try {\n","            for (let i = 0; i < inline_js.length; i++) {\n","      inline_js[i].call(root, root.Bokeh);\n","    }\n","\n","      } catch (error) {throw error;\n","      }} else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(run_inline_js, 100);\n","    } else if (!root._bokeh_failed_load) {\n","      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n","      root._bokeh_failed_load = true;\n","    } else if (force !== true) {\n","      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n","      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n","    }\n","  }\n","\n","  if (root._bokeh_is_loading === 0) {\n","    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n","    run_inline_js();\n","  } else {\n","    load_libs(css_urls, js_urls, function() {\n","      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n","      run_inline_js();\n","    });\n","  }\n","}(window));"],"application/vnd.bokehjs_load.v0+json":"'use strict';\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  const NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded(error = null) {\n    const el = document.getElementById(null);\n    if (el != null) {\n      const html = (() => {\n        if (typeof root.Bokeh === \"undefined\") {\n          if (error == null) {\n            return \"BokehJS is loading ...\";\n          } else {\n            return \"BokehJS failed to load.\";\n          }\n        } else {\n          const prefix = `BokehJS ${root.Bokeh.version}`;\n          if (error == null) {\n            return `${prefix} successfully loaded.`;\n          } else {\n            return `${prefix} <b>encountered errors</b> while loading and may not function as expected.`;\n          }\n        }\n      })();\n      el.innerHTML = html;\n\n      if (error != null) {\n        const wrapper = document.createElement(\"div\");\n        wrapper.style.overflow = \"auto\";\n        wrapper.style.height = \"5em\";\n        wrapper.style.resize = \"vertical\";\n        const content = document.createElement(\"div\");\n        content.style.fontFamily = \"monospace\";\n        content.style.whiteSpace = \"pre-wrap\";\n        content.style.backgroundColor = \"rgb(255, 221, 221)\";\n        content.textContent = error.stack ?? error.toString();\n        wrapper.append(content);\n        el.append(wrapper);\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(() => display_loaded(error), 100);\n    }\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.4.3.min.js\"];\n  const css_urls = [];\n\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {\n    }\n  ];\n\n  function run_inline_js() {\n    if (root.Bokeh !== undefined || force === true) {\n      try {\n            for (let i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n\n      } catch (error) {throw error;\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"},"metadata":{}},{"output_type":"display_data","data":{"text/html":["\n","  <div id=\"d2eba0ad-d8ea-4d6b-990f-01d6a4b914c4\" data-root-id=\"p1237\" style=\"display: contents;\"></div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["(function(root) {\n","  function embed_document(root) {\n","  const docs_json = {\"1ebf051f-f7dc-498f-b50c-c94ba62fc098\":{\"version\":\"3.4.3\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"Figure\",\"id\":\"p1237\",\"attributes\":{\"width\":1200,\"height\":700,\"x_range\":{\"type\":\"object\",\"name\":\"DataRange1d\",\"id\":\"p1238\"},\"y_range\":{\"type\":\"object\",\"name\":\"DataRange1d\",\"id\":\"p1239\"},\"x_scale\":{\"type\":\"object\",\"name\":\"LinearScale\",\"id\":\"p1247\"},\"y_scale\":{\"type\":\"object\",\"name\":\"LinearScale\",\"id\":\"p1248\"},\"title\":{\"type\":\"object\",\"name\":\"Title\",\"id\":\"p1240\",\"attributes\":{\"text\":\"\\u0394 Absorbance vs added Volume ***\",\"text_font_size\":\"20pt\"}},\"renderers\":[{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1276\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1270\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1271\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1272\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"AgAAAAQAAAAGAAAACAAAAAoAAAAMAAAAEAAAABQAAAAYAAAAIAAAACgAAAAwAAAA\"},\"shape\":[12],\"dtype\":\"int32\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"1xLyQc9mpT+1pnnHKTqyP14pyxDHurg/GuJYF7fRwD+ezarP1VbEP9iBc0aU9sY/bVZ9rrZixz+xcmiR7XzHP+LHmLuWkMc/sHJoke18xz+0yHa+nxrHP08eFmpN88Y/\"},\"shape\":[12],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1277\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1278\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Scatter\",\"id\":\"p1273\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"size\":{\"type\":\"value\",\"value\":10},\"line_color\":{\"type\":\"value\",\"value\":\"blue\"},\"fill_color\":{\"type\":\"value\",\"value\":\"blue\"},\"hatch_color\":{\"type\":\"value\",\"value\":\"blue\"}}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Scatter\",\"id\":\"p1274\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"size\":{\"type\":\"value\",\"value\":10},\"line_color\":{\"type\":\"value\",\"value\":\"blue\"},\"line_alpha\":{\"type\":\"value\",\"value\":0.1},\"fill_color\":{\"type\":\"value\",\"value\":\"blue\"},\"fill_alpha\":{\"type\":\"value\",\"value\":0.1},\"hatch_color\":{\"type\":\"value\",\"value\":\"blue\"},\"hatch_alpha\":{\"type\":\"value\",\"value\":0.1}}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Scatter\",\"id\":\"p1275\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"size\":{\"type\":\"value\",\"value\":10},\"line_color\":{\"type\":\"value\",\"value\":\"blue\"},\"line_alpha\":{\"type\":\"value\",\"value\":0.2},\"fill_color\":{\"type\":\"value\",\"value\":\"blue\"},\"fill_alpha\":{\"type\":\"value\",\"value\":0.2},\"hatch_color\":{\"type\":\"value\",\"value\":\"blue\"},\"hatch_alpha\":{\"type\":\"value\",\"value\":0.2}}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1287\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1281\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1282\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1283\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"AgAAAAQAAAAGAAAACAAAAAoAAAAMAAAAEAAAABQAAAAYAAAAIAAAACgAAAAwAAAA\"},\"shape\":[12],\"dtype\":\"int32\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"1VxPJfJEoT9JbokoljGxPwja/Fr0obk/k3iaLwbowD9dtFcCKZDEPxuZ4pfCscY/78vHZJt1xz/I1SChrYbHPzmeRmBRf8c/6G0LO5pexz+tuVsKzjbHP3hSr07zDMc/\"},\"shape\":[12],\"dtype\":\"float64\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1288\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1289\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1284\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"red\",\"line_width\":3}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1285\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"red\",\"line_alpha\":0.1,\"line_width\":3}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1286\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"red\",\"line_alpha\":0.2,\"line_width\":3}}}}],\"toolbar\":{\"type\":\"object\",\"name\":\"Toolbar\",\"id\":\"p1246\",\"attributes\":{\"tools\":[{\"type\":\"object\",\"name\":\"PanTool\",\"id\":\"p1259\"},{\"type\":\"object\",\"name\":\"WheelZoomTool\",\"id\":\"p1260\",\"attributes\":{\"renderers\":\"auto\"}},{\"type\":\"object\",\"name\":\"BoxZoomTool\",\"id\":\"p1261\",\"attributes\":{\"overlay\":{\"type\":\"object\",\"name\":\"BoxAnnotation\",\"id\":\"p1262\",\"attributes\":{\"syncable\":false,\"level\":\"overlay\",\"visible\":false,\"left\":{\"type\":\"number\",\"value\":\"nan\"},\"right\":{\"type\":\"number\",\"value\":\"nan\"},\"top\":{\"type\":\"number\",\"value\":\"nan\"},\"bottom\":{\"type\":\"number\",\"value\":\"nan\"},\"left_units\":\"canvas\",\"right_units\":\"canvas\",\"top_units\":\"canvas\",\"bottom_units\":\"canvas\",\"line_color\":\"black\",\"line_alpha\":1.0,\"line_width\":2,\"line_dash\":[4,4],\"fill_color\":\"lightgrey\",\"fill_alpha\":0.5}}}},{\"type\":\"object\",\"name\":\"SaveTool\",\"id\":\"p1267\"},{\"type\":\"object\",\"name\":\"ResetTool\",\"id\":\"p1268\"},{\"type\":\"object\",\"name\":\"HelpTool\",\"id\":\"p1269\"}]}},\"toolbar_location\":\"below\",\"left\":[{\"type\":\"object\",\"name\":\"LinearAxis\",\"id\":\"p1254\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"BasicTicker\",\"id\":\"p1255\",\"attributes\":{\"mantissas\":[1,2,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"BasicTickFormatter\",\"id\":\"p1256\"},\"axis_label\":\"\\u0394 Absorbance\",\"axis_label_text_font_size\":\"16pt\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1257\"},\"major_label_text_font_size\":\"12pt\"}}],\"below\":[{\"type\":\"object\",\"name\":\"LinearAxis\",\"id\":\"p1249\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"BasicTicker\",\"id\":\"p1250\",\"attributes\":{\"mantissas\":[1,2,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"BasicTickFormatter\",\"id\":\"p1251\"},\"axis_label\":\"Volume (\\u00b5L)\",\"axis_label_text_font_size\":\"16pt\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1252\"},\"major_label_text_font_size\":\"12pt\"}}],\"center\":[{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1253\",\"attributes\":{\"axis\":{\"id\":\"p1249\"}}},{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1258\",\"attributes\":{\"dimension\":1,\"axis\":{\"id\":\"p1254\"}}},{\"type\":\"object\",\"name\":\"Legend\",\"id\":\"p1279\",\"attributes\":{\"location\":\"bottom_right\",\"title\":\"Legend\",\"title_text_font_size\":\"14pt\",\"label_text_font_size\":\"12pt\",\"items\":[{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1280\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"\\u0394 Absorbance\"},\"renderers\":[{\"id\":\"p1276\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1290\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"Ajuste del modelo\"},\"renderers\":[{\"id\":\"p1287\"}]}}]}}]}}]}};\n","  const render_items = [{\"docid\":\"1ebf051f-f7dc-498f-b50c-c94ba62fc098\",\"roots\":{\"p1237\":\"d2eba0ad-d8ea-4d6b-990f-01d6a4b914c4\"},\"root_ids\":[\"p1237\"]}];\n","  void root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n","  }\n","  if (root.Bokeh !== undefined) {\n","    embed_document(root);\n","  } else {\n","    let attempts = 0;\n","    const timer = setInterval(function(root) {\n","      if (root.Bokeh !== undefined) {\n","        clearInterval(timer);\n","        embed_document(root);\n","      } else {\n","        attempts++;\n","        if (attempts > 100) {\n","          clearInterval(timer);\n","          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n","        }\n","      }\n","    }, 10, root)\n","  }\n","})(window);"],"application/vnd.bokehjs_exec.v0+json":""},"metadata":{"application/vnd.bokehjs_exec.v0+json":{"id":"p1237"}}}],"source":["# @title Plot Δ Absorbance vs Volume (µL) with model fitting\n","\n","\n","\n","### Plot title\n","Titulo = \"Δ Absorbance vs added Volume ***\"  #@param {type:\"string\"}\n","\n","### Title x-axis\n","y_axis = \"Δ Absorbance\" #@param{type:\"string\"}\n","\n","### Title y-axis\n","x_axis = \"Volume (µL)\" #@param{type:\"string\"}\n","\n","### Title leyend\n","Leyenda = \"Δ Absorbance\" #@param{type:\"string\"}\n","\n","\n","# Display Bokeh plots in the notebook\n","output_notebook()\n","\n","# Simulated data using the model with the adjusted parameters\n","v = DeltaAbs.iloc[:, 0].values\n","fitted_deltaAbs = binding_model(sol['parAjustados'], v) # Volume's data\n","deltaAbs_exp= DeltaAbs.iloc[:,1].values\n","\n","# Create a dataframe to save the values of fitted_DeltaAbs\n","DeltaAbs_model=DeltaAbs.copy() # Create a copy of DeltaAbs\n","DeltaAbs_model['ΔAbs']= fitted_deltaAbs # Asign the values of ΔAbs from the model\n","\n","\n","\n","\n","# Create a figure\n","p = figure(width=1200, height=700, title=Titulo)\n","\n","# Add a scatter-plot (experimental data)\n","scatter = p.scatter(x=v,y=deltaAbs_exp ,  legend_label=Leyenda, color='blue', size=10)\n","\n","# Add a line with the model fitting\n","p.line(x=v, y=fitted_deltaAbs, legend_label='Ajuste del modelo', color='red', line_width=3)\n","\n","# Define the titles of the axis\n","p.xaxis.axis_label = x_axis\n","p.yaxis.axis_label = y_axis\n","\n","# Define the font size for the title, axis and labels\n","p.title.text_font_size = '20pt'\n","p.xaxis.axis_label_text_font_size = '16pt'\n","p.yaxis.axis_label_text_font_size = '16pt'\n","p.xaxis.major_label_text_font_size = '12pt'\n","p.yaxis.major_label_text_font_size = '12pt'\n","\n","# Add the leyend\n","p.legend.title = 'Legend'\n","\n","# Define the font size for the leyend\n","p.legend.label_text_font_size = '12pt'\n","p.legend.title_text_font_size = '14pt'\n","p.legend.location = \"bottom_right\"\n","p.toolbar_location = \"below\"\n","\n","# Save the plot as an object\n","D_Absorbance_plot_fitted=p\n","\n","# Display the plot\n","show(D_Absorbance_plot_fitted)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"cellView":"form","id":"aQsLE9dc-f1q","colab":{"base_uri":"https://localhost:8080/","height":369},"executionInfo":{"status":"ok","timestamp":1731241667580,"user_tz":-60,"elapsed":1493,"user":{"displayName":"Mario Asensio Franco","userId":"04929328492041251812"}},"outputId":"9333d17d-69e3-456d-bd04-3fb30bd72210"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'initialPar': {'L': 1, 'V0': 1000, 'Lo': 55, 'Ro': 2, 'Kd': 100, 'epsilon': 0.1}, 'parAjustados': {'Ro': 0.6103436632231651, 'Kd': 0.004338108627067491, 'epsilon': 0.30990596385219626, 'L': 1, 'V0': 1000, 'Lo': 55}, 'sdPar': {'Ro_std': 0.013557813070724265, 'Kd_std': 0.002549416816399372, 'epsilon_std': 0.007502416869943929}, 'R2': 0.9962945698655115, 'detalles':      message: `ftol` termination condition is satisfied.\n","     success: True\n","      status: 2\n","         fun: [-8.071e-03 -4.037e-03  3.527e-03  6.808e-04  1.749e-03\n","               -2.100e-03  5.766e-04  2.976e-04 -5.271e-04 -9.255e-04\n","                8.600e-04  7.827e-04]\n","           x: [ 6.103e-01  4.338e-03  3.099e-01]\n","        cost: 5.2361264942171625e-05\n","         jac: [[ 5.773e-04 -6.671e-02  1.088e-01]\n","               [ 1.864e-03 -1.688e-01  2.167e-01]\n","               ...\n","               [ 2.968e-01 -1.181e-01  5.852e-01]\n","               [ 2.949e-01 -9.265e-02  5.811e-01]]\n","        grad: [ 1.128e-11  1.771e-10  3.167e-12]\n","  optimality: 6.8817685507081325e-12\n"," active_mask: [0 0 0]\n","        nfev: 66\n","        njev: 57}\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_d3734df0-e04f-48b6-903b-3a7b56b762af\", \"spectra_10112024122748.zip\", 1229687)"]},"metadata":{}}],"source":["#@title Download data\n","#@markdown Write the name for the zip file that contains the data inputted and produced.\n","\n","# Now let's record all the data that it has been inputted and generated to export it.\n","\n","# Initial data\n","datos.to_csv('Experimental_data.csv', index=False)\n","\n","# Experimental data of Δ Absorbance vs Volume\n","DeltaAbs.to_csv('DeltaAbs_expertimental.csv', index=False)\n","\n","# Fitting model data of Δ Absorbance vs Volume\n","DeltaAbs_model.to_csv('DeltaAbs_fitted.csv', index=False)\n","\n","\n","\n","# Now let's save the plots\n","\n","# Plot 2D spectra\n","output_file(\"spectra_plot_2D.html\")\n","save(spectra_plot_2D, title=\"spectra_plot_2D\",)\n","\n","# Plot 3D spectra\n","spectra_plot_3D.savefig('spectra_plot_3D.png', format='png', dpi=400) # Ajustar dpi para ajustar la resolución\n","\n","# Plot Δ Absorbance vs Volume (µL) with model fitting\n","output_file(\"D_Absorbance_plot_fitted.html\")\n","save(D_Absorbance_plot_fitted, title=\"D_Absorbance_plot_fitted\",)\n","\n","\n","# Then we edit the data generated by the fitting to save and export them\n","\n","# To save the results we create two dictionariesPara guardar los resultados vamos a crear dos diccionarios a partir de la solución de procesa\n","# y de los diccionarios de los parametros iniciales (fijos y variables)\n","\n","# To save the results we create a dictinary that includes the initial parameters and the result from\n","# the procesa function (sol)\n","\n","# List of keys to extract from the sol dictionary\n","keys= ['parAjustados', 'sdPar', 'R2', 'detalles']\n","\n","partial= {key:sol[key] for key in keys}\n","\n","Initial_params={'initialPar':initial_params}\n","\n","results={**Initial_params, **partial}\n","\n","print(results)\n","\n","# Create CSV\n","with open('Fitting_result.csv', mode='w', newline='') as file:\n","    writer = csv.writer(file)\n","\n","    # Add blank rows\n","    writer.writerow([''] * 7)\n","    writer.writerow([''] * 7)\n","\n","    # Headers\n","    writer.writerow(['initialPar', '', '', 'parAjustados', '', '', 'sdPar'])\n","\n","    # Row 1: L, V0, Lo (verify whether they are optimized or not, and if the do not have sdPar)\n","    writer.writerow([\n","        'L', results['initialPar']['L'], '', 'Ro', results['parAjustados']['Ro'], '',\n","        'Ro_std', results['sdPar'].get('Ro_std', '') if 'Ro' in variable_params else ''  # Display Ro_std only if it is a variable parameter\n","    ])\n","    writer.writerow([\n","        'V0', results['initialPar']['V0'], '', 'Kd', results['parAjustados']['Kd'], '',\n","        'Kd_std', results['sdPar'].get('Kd_std', '') if 'Kd' in variable_params else ''  # Display Kd_std only if it is a variable parameter\n","    ])\n","    writer.writerow([\n","        'Lo', results['initialPar']['Lo'], '', 'epsilon', results['parAjustados']['epsilon'], '',\n","        'epsilon_std', results['sdPar'].get('epsilon_std', '') if 'epsilon' in variable_params else ''  # Display epsilon_std only if it is a variable parameter\n","    ])\n","    writer.writerow([\n","        'Ro', results['initialPar']['Ro'], '', 'L', results['parAjustados']['L'], '',\n","        'L_std', results['sdPar'].get('L_std', '') if 'L' in variable_params else ''  # Display L_std only if it is a variable parameter\n","    ])\n","    writer.writerow([\n","        'Kd', results['initialPar']['Kd'], '', 'V0', results['parAjustados']['V0'], '',\n","        'V0_std', results['sdPar'].get('V0_std', '') if 'V0' in variable_params else ''  # Display V0_std only if it is a variable parameter\n","    ])\n","    writer.writerow([\n","        'epsilon', results['initialPar']['epsilon'], '', 'Lo', results['parAjustados']['Lo'], '',\n","        'Lo_std', results['sdPar'].get('Lo_std', '') if 'Lo' in variable_params else ''  # Display Lo_std only if it is a variable parameter\n","    ])\n","\n","    # Add blank rows\n","    writer.writerow([''] * 7)\n","    writer.writerow([''] * 7)\n","\n","    # R2 Section\n","    writer.writerow(['R2'])\n","    writer.writerow(['R2', results['R2']])\n","    writer.writerow([''] * 7)\n","    writer.writerow([''] * 7)\n","\n","    # Detalles Section\n","    writer.writerow(['Detalles'])\n","\n","    # x values (convert floats to strings to concatenate with 'x')\n","    writer.writerow(['x'] + [str(x) for x in results['detalles']['x']])\n","\n","    # cost\n","    writer.writerow(['cost', results['detalles']['cost']])\n","\n","    # Add blank rows\n","    writer.writerow([''] * 7)\n","\n","    # fun values (split into multiple rows)\n","    fun_values = results['detalles']['fun']\n","    writer.writerow(['fun'] + [str(f) for f in fun_values[:6]])\n","    writer.writerow(['fun'] + [str(f) for f in fun_values[6:]])\n","\n","    # Add blank rows\n","    writer.writerow([''] * 7)\n","\n","    # jac values (split into multiple rows)\n","    for row in results['detalles']['jac']:\n","        writer.writerow(['jac'] + [str(v) for v in row])\n","\n","    # Add blank rows\n","    writer.writerow([''] * 7)\n","\n","    # grad values (convert floats to strings)\n","    writer.writerow(['grad'] + [str(g) for g in results['detalles']['grad']])\n","\n","    # optimality\n","    writer.writerow(['optimality', results['detalles']['optimality']])\n","\n","    # active_mask (convert integers to strings)\n","    writer.writerow(['active_mask'] + [str(a) for a in results['detalles']['active_mask']])\n","\n","    # nfev, njev, status, message, success\n","    writer.writerow(['nfev', results['detalles']['nfev']])\n","    writer.writerow(['njev', results['detalles']['njev']])\n","    writer.writerow(['status', results['detalles']['status']])\n","    writer.writerow(['message', results['detalles']['message']])\n","    writer.writerow(['success', results['detalles']['success']])\n","\n","\n","\n","# Then we proceed to save all the files and compressed them into a zip file\n","\n","# Take the current date and hour ()\n","current_time = datetime.now().strftime(\"%d%m%Y%H%M%S\")\n","\n","# Define the prefix and create the complete name of the zip file\n","name =\"spectra_\" #@param {type: \"string\"}\n","zip_filename = f\"{name}{current_time}.zip\"\n","\n","# Create a zip file with the name written\n","with zipfile.ZipFile(zip_filename, 'w') as zipf:\n","    # Add CSV files\n","    zipf.write('Experimental_data.csv')\n","    zipf.write('DeltaAbs_expertimental.csv')\n","    zipf.write('DeltaAbs_fitted.csv')\n","    zipf.write ('Fitting_result.csv')\n","    # Add HTML files (Bokeh plots)\n","    zipf.write('spectra_plot_2D.html')\n","    zipf.write('D_Absorbance_plot_fitted.html')\n","\n","    # Add PNG file (3D spectra plot)\n","    zipf.write('spectra_plot_3D.png')\n","\n","\n","# Download the zipped file\n","files.download(zip_filename)\n"]}],"metadata":{"colab":{"provenance":[{"file_id":"1SevDFNWc1d4l-fu4p4dKIu4sKOvIzA0A","timestamp":1727803104423},{"file_id":"1J6BCq8MV43uiM6zzJX7T8QY00XfJ0bDs","timestamp":1726828790706},{"file_id":"1phitKIamvRHNKBWvAQ_B_SFRu5SIVJ5v","timestamp":1726562759992}],"authorship_tag":"ABX9TyM6/FZICzFVWDaLFY1xDdD4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}